{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/wpm/content/content.component.css","webpack:///./src/wpm/content/content.component.html","webpack:///./src/wpm/content/content.component.ts","webpack:///./src/wpm/header/header.component.css","webpack:///./src/wpm/header/header.component.html","webpack:///./src/wpm/header/header.component.ts","webpack:///./src/wpm/main.component.css","webpack:///./src/wpm/main.component.html","webpack:///./src/wpm/main.component.ts","webpack:///./src/wpm/packages/packages.component.css","webpack:///./src/wpm/packages/packages.component.html","webpack:///./src/wpm/packages/packages.component.ts","webpack:///./src/wpm/websocket.service.ts","webpack:///./src/wpm/wpm.module.ts","webpack:///./src/wpm/wpm.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { WpmModule } from './wpm/wpm.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(WpmModule)\n  .catch(err => console.error(err));\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"content\\\">\\n  <mat-tab-group>\\n        <mat-tab *ngFor=\\\"let packageList of packageLists\\\" label=\\\"{{getPackageTabLabel(packageList)}}\\\">\\n          <app-packages [packageList]=\\\"packageList\\\"></app-packages>\\n        </mat-tab>\\n  </mat-tab-group>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {PACKAGE_TYPE_WEB_COMPONENT, PACKAGE_TYPE_WEB_SERVICE, PACKAGE_TYPE_WEB_LAYOUT, PACKAGE_TYPE_SOLUTION} from '../wpm.service'\n\nexport interface PackageList {\n  title: string;\n  type: string;\n  updateCount: number;\n}\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent implements OnInit {\n\n  packageLists: PackageList[] = [\n    {\n      title: \"NG Components\",\n      type: PACKAGE_TYPE_WEB_COMPONENT,\n      updateCount: 0\n    },\n    {\n      title: \"NG Services\",\n      type: PACKAGE_TYPE_WEB_SERVICE,\n      updateCount: 0\n    },\n    {\n      title: \"NG Layouts\",\n      type: PACKAGE_TYPE_WEB_LAYOUT,\n      updateCount: 0\n    },\n    {\n      title: \"Servoy solutions\",\n      type: PACKAGE_TYPE_SOLUTION,\n      updateCount: 0\n    }\n  ]\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getPackageTabLabel(packageList: PackageList): string {\n    return packageList.updateCount > 0 ? packageList.title + \" (\" + packageList.updateCount + \")\" : packageList.title;\n  }\n}\n","module.exports = \".header-content {\\n    padding-left: 10px;\\n    padding-right: 10px;\\n    background-color: #000;\\n    color: #fff;\\n    font-size: medium;\\n    text-transform: none;\\n    display: block;\\n    overflow: auto;\\n}\\n\\n.wpm-title {\\n    margin-bottom: 4px;\\n  }\\n\\n.wpm-subtitle {\\n    margin-top: 0px;\\n    margin-bottom: 20px;\\n    font-size: 14px;\\n}\\n\\n.warning {\\n    color: red;\\n}\"","module.exports = \"<div class=\\\"header-content\\\">\\n    <!--\\n    <div style=\\\"float:right\\\" layout=\\\"row\\\">\\n     <md-select ng-model=\\\"activeRepository\\\" class=\\\"repository\\\">\\n        <md-option ng-value=\\\"repository\\\" ng-repeat=\\\"repository in repositories\\\">{{repository}}</md-option>\\n         <md-tooltip md-direction=\\\"bottom\\\" md-autohide=\\\"true\\\">Select to change the repository</md-tooltip>\\n      </md-select>\\n       <md-button style=\\\"height:auto;\\\" class=\\\"md-icon-button fa fa-trash\\\"  ng-click=\\\"removeRepository()\\\" ng-if=\\\"showRemoveRepository\\\">\\n        <md-tooltip md-direction=\\\"bottom\\\" md-autohide=\\\"true\\\">\\n          Remove the repository url'.\\n        </md-tooltip>\\n      </md-button>\\n    </div>\\n    -->\\n    <h1 class=\\\"wpm-title\\\">Servoy Package Manager</h1>\\n    <p *ngIf=\\\"isNeedRefresh()\\\" class=\\\"warning\\\">There are new packages available! Reopen the Web Package Manager to load them.</p>\\n    <p class=\\\"wpm-subtitle\\\">Manage Web Packages of the active solution {{ !!getActiveSolution() ? \\\"'\\\" + getActiveSolution() + \\\"'\\\" : \\\"\\\"}} and it's modules...</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { WpmService } from '../wpm.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  wpmService: WpmService;\n\n  constructor(wpmService: WpmService) {\n    this.wpmService = wpmService;\n  }\n\n  ngOnInit() {\n  }\n\n  getActiveSolution(): string {\n    return this.wpmService.getActiveSolution();\n  }\n\n  isNeedRefresh(): boolean {\n    return this.wpmService.isNeedRefresh();\n  }\n}\n","module.exports = \"\"","module.exports = \"<app-header class=\\\"wpm-header\\\"></app-header>\\n<app-content class=\\\"wpm-content\\\"></app-content>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-wpm',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent {\n}\n","module.exports = \"th > div {\\n    white-space: nowrap;\\n\\tfont-size: medium;\\n    font-weight: bold;\\n    background-color: rgb(248,248,248);\\n    color: rgba(0,0,0,0.55);\\n    padding: 16px;\\n}\\n\\ntr.wpm-package-description > td {\\n    padding-left: 60px;\\n    padding-right: 0px;\\n    padding-bottom: 0px;\\n    padding-top: 0px;\\n  }\\n\\ntr.wpm-package-description > td > mat-card-content {\\n    display: block;\\n    padding: 15px;\\n    overflow: hidden;\\n    background-color: rgb(240,240,240);\\n}\\n\\n.table-package {\\n    width: 100%;\\n}\\n\\n.table-package th,\\n.table-package td {\\n    padding-right: 2px;\\n    padding-left: 2px;\\n}\\n\\n.table-package .md-avatar {\\n    margin-top: 8px;\\n    margin-bottom: 8px;\\n    margin-right: 16px;\\n    border-radius: 50%;\\n    box-sizing: content-box;\\n    width: 40px;\\n    height: 40px;\\n}\\n\\n.table-package md-select {\\n    display: inline-block;\\n}\\n\\n.table-package td > div {\\n    display: flex;\\n    justify-content: flex-start;\\n    align-items: center;\\n    min-height: 48px;\\n    margin-left: 5px;\\n    margin-right: 5px;\\n    height: auto;\\n}\\n\\n.table-package td > div.align-center {\\n    justify-content: center;\\n}\\n\\n.table-package td > div.align-right {\\n    justify-content: flex-end;\\n}\\n\\ntd.column-fitwidth {\\n    width: 1%;\\n    white-space: nowrap;\\n}\\n\\n.table-package .release-action {\\n    font-size: 24px;\\n    float: right;\\n}\\n\\n.table-package {\\n    border-spacing: 0px;\\n    padding: 2px;\\n}\\n\\n.table-package th,\\n.table-package td {\\n    padding-right: 4px;\\n    padding-left: 4px;\\n}\\n\\n.wpm-package-selected {\\n    background-color: rgb(210,210,210);\\n}\\n\\n.wpm-clickable {\\n    cursor: pointer;\\n  }\\n\\n.wpm-clickable:focus {\\n    outline: none;\\n}\"","module.exports = \"<table style=\\\"width:100%\\\" class=\\\"table-package\\\">\\n    <tr>\\n      <th><div>Package</div></th>\\n      <th colspan=\\\"2\\\"><div class=\\\"subheader\\\">Released version</div></th>  \\n      <th><div>Added</div></th>\\n      <th><div>In solution/module</div></th>  \\n      <th><div>References</div></th>\\n    </tr>\\n    <ng-template ngFor let-package [ngForOf]=\\\"packages\\\">\\n      <tr [ngClass]=\\\"isPackageSelected(package) ? 'wpm-package-selected' : ''\\\">\\n        <td>\\n          <div class=\\\"wpm-clickable\\\" matTooltip=\\\"{{ getDescriptionTooltip(package) }}\\\" matTooltipDisabled=\\\"{{ !package.description }}\\\" (click)=\\\"togglePackageSelection($event, package)\\\">\\n            <img  [src]=\\\"package.icon\\\" class=\\\"md-avatar\\\" />\\n            <span>{{ package.displayName }}</span>\\n            <mat-icon *ngIf=\\\"package.description\\\">{{ isSelectedAndWithDescriptionExpanded(package) ? \\\"arrow_drop_up\\\" : \\\"arrow_drop_down\\\" }}</mat-icon>\\n          </div>\\n        </td>\\n        <td class=\\\"column-fitwidth\\\">\\n          <!-- Release Version-->\\n          <div class=\\\"align-center\\\">\\n            <div class= \\\"select\\\"> \\n              <mat-form-field>\\n                <mat-select [(value)]=\\\"package.selected\\\" [placeholder]=\\\"getSelectedRelease(package)\\\" matTooltip=\\\"{{ getReleaseTooltip(package) }}\\\">\\n                  <mat-option *ngFor=\\\" let release of package.releases\\\" [value]=\\\"release.version\\\">{{ release.version }}</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </td>\\n        <td class=\\\"column-fitwidth\\\">\\n          <!-- Add/Upgrade button -->\\n          <div class=\\\"align-center btn-group\\\">\\n            <button mat-icon-button *ngIf=\\\"installAvailable(package)\\\" [disabled]=\\\"isInstallingOrRemoving(package)\\\" (click)=\\\"install(package)\\\">\\n              <mat-icon matTooltip=\\\"{{ getInstallTooltip(package) }}\\\">{{ package.installed ? \\\"update\\\" : \\\"add_circle_outline\\\" }}</mat-icon>\\n            </button>\\n          </div>\\n        </td>\\n        <td class=\\\"column-fitwidth\\\">\\n          <!-- Added -->\\n          <div class=\\\"align-center\\\"> \\n            <p matTooltip=\\\"{{ getNotWPAAddedTooltip() }}\\\" matTooltipDisabled=\\\"{{ !package.installed || package.installedIsWPA }}\\\">{{ package.installed }}</p>\\n            <button mat-icon-button *ngIf=\\\"canBeRemoved(package)\\\" [disabled]=\\\"isInstallingOrRemoving(package)\\\" (click)=\\\"uninstall(package)\\\">\\n              <mat-icon matTooltip=\\\"{{ getRemoveTooltip(package) }}\\\">delete_outline</mat-icon>\\n            </button>\\n          </div>\\n        </td>\\n        <td class=\\\"column-fitwidth\\\">\\n          <!-- Active Solution -->\\n          <div class=\\\"align-center\\\">\\n            <mat-select [(value)]=\\\"package.activeSolution\\\" [disabled]=\\\"!installEnabled(package)\\\" matTooltip=\\\"{{ getSolutionTooltip(package) }}\\\">\\n              <mat-option *ngFor=\\\"let solution of getSolutions()\\\" [value]=\\\"solution\\\">{{ solution }}</mat-option>\\n            </mat-select>\\n          </div>\\n        </td>\\n        <td class=\\\"column-fitwidth\\\">\\n          <!-- References -->\\n          <div class=\\\"align-right\\\">  \\n            <button mat-raised-button *ngIf=\\\"package.sampleUrl\\\" matTooltip=\\\"View demo\\\" (click)=\\\"showUrl(package.sampleUrl)\\\">Demo</button>\\n            <button mat-icon-button *ngIf=\\\"package.wikiUrl\\\" matTooltip=\\\"Documentation\\\" (click)=\\\"showUrl(package.wikiUrl)\\\"><mat-icon>library_books</mat-icon></button>\\n            <button mat-icon-button *ngIf=\\\"package.sourceUrl\\\" matTooltip=\\\"Source code\\\" (click)=\\\"showUrl(package.sourceUrl)\\\"><mat-icon>code</mat-icon></button>\\n          </div>\\n        </td> \\n      </tr>\\n      <tr *ngIf=\\\"isInstallingOrRemoving(package)\\\"> \\n          <!-- Loading indicator -->\\n          <td colspan=\\\"6\\\">\\n            <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n          </td>\\n      </tr>\\n      <tr [hidden]=\\\"!isSelectedAndWithDescriptionExpanded(package)\\\" class=\\\"wpm-package-description\\\">\\n            <!-- Description panel --> \\n            <td colspan=\\\"6\\\">\\n              <mat-card-content *ngIf=\\\"isSelectedAndWithDescriptionExpanded(package)\\\" [innerHTML]=\\\"getPackageDescription(package)\\\"></mat-card-content>\\n            </td>\\n      </tr>\\n    </ng-template>\\n  </table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Package, WpmService } from '../wpm.service';\nimport { PackageList } from '../content/content.component'\n\n@Component({\n  selector: 'app-packages',\n  templateUrl: './packages.component.html',\n  styleUrls: ['./packages.component.css']\n})\nexport class PackagesComponent implements OnInit {\n\n  @Input() packageList: PackageList;\n  packages: Package[];\n  wpmService: WpmService;\n  selectedPackage: Package;\n  descriptionExpanded: boolean;\n\n  constructor(wpmService: WpmService) {\n    this.wpmService = wpmService;  \n  }\n\n  ngOnInit() {\n    this.wpmService.getPackages().subscribe(p => {\n      if(p.packageType == this.packageList.type) {\n        this.packages = p.packages;\n        this.packageList.updateCount = this.getUpgradeCount(this.packages);\n      }\n    })\n  }\n\n  install(p: Package) {\n    this.wpmService.install(p);\n  }\n\n  uninstall(p: Package) {\n    this.wpmService.uninstall(p);\n  }\n\n  showUrl(url: string) {\n    this.wpmService.showUrl(url);\n  }\n\n  getSelectedRelease(p: Package): string {\n    if(!p.selected) {\n      p.selected = p.releases[0].version;\n    }\n    return p.selected == p.releases[0].version ? \"Latest\" : \"\";\n  }\n\n  installAvailable(p: Package): boolean {\n    return !p.installed || (p.installedIsWPA && !this.isLatestRelease(p) && p.selected > p.installed);\n  }\n\n  canBeRemoved(p: Package): boolean {\n    return p.installed && p.installedIsWPA && (p.packageType != 'Solution');\n  }\n\n  isLatestRelease(p: Package): boolean {\n    return p.installed == p.releases[0].version;\n  }\n\n  isInstallingOrRemoving(p: Package): boolean {\n    return p.installing || p.removing;\n  }\n\n  installEnabled(p: Package): boolean {\n    return !this.isInstallingOrRemoving(p) && this.installAvailable(p);\n  }\n\n  isPackageSelected(p: Package): boolean {\n    return this.selectedPackage == p;\n  }\n\n  isSelectedAndWithDescriptionExpanded(p: Package): boolean {\n    return this.isPackageSelected(p) && this.descriptionExpanded;    \n  }\n\n  togglePackageSelection(event: MouseEvent, p:Package){\n    if (this.isPackageSelected(p)) {\n        this.descriptionExpanded = !this.descriptionExpanded;\n        if (this.descriptionExpanded) this.descriptionExpanded = !!p.description; // allow expand only if it has a description\n    } else {\n        this.selectedPackage = p;\n        this.descriptionExpanded = !!p.description;\n    }\n    event.stopPropagation();\n  }\n\n  getPackageDescription(p: Package){\n    // if (p.description) {\n    //   return $sce.trustAsHtml(p.description);\n    // }\n    // return \"\";\n    return p.description;\n  }\n\n  getSolutions(): string[] {\n    return this.wpmService.getSolutions();\n  }\n\n  getUpgradeCount(packages: Package[]): number {\n    let count = 0;\n    try {\n      for (let i = 0; i < packages.length; i++) {\n          let pckg = packages[i];\n          if (pckg.installed && pckg.installed < pckg.releases[0].version) {\n            count++;\n          }\n      }\n    } catch (e) {}\n    return count;\n  }\n\n  getReleaseTooltip(p: Package): string {\n    if (p.installed) { \n      return p.installedIsWPA ? \"Version to upgrade to...\" : \"Released versions\";\n    } else {\n      return \"Version to add to the active solution or modules...\";\n    }\n  }\n\n  getInstallTooltip(p: Package): string {\n    if (p.installed) { \n      return p.installing ? \"Upgrading the web package...\" : \"Upgrade the web package to the selected release version.\";\n    } else if(p.installing) {\n      return \"Adding the web package...\";\t\t      \n    } else {\n      return \"Add the web package to solution '\" + p.activeSolution + \"'.\";\n    }    \n  }\n\n  getRemoveTooltip(p: Package): string {\n    return \"Remove the web package from solution \" + p.activeSolution;\n  }\n\n  getDescriptionTooltip(p: Package): string {\n    return \"Click to read more about package \" + p.displayName;\n  }\n\n  getNotWPAAddedTooltip(): string {\n    return \"Package not added using Web Package Manager\"; \n  }\n\n  getSolutionTooltip(p: Package): string {\n    if (p.installed) { \n      return p.installing ? \"Solution that will contain this upgrading package...\" : \"The solution that already contains/references this package.\";\n    } else if(p.installing) {\n      return \"Solution that will contain this package...\";\t\t      \n    } else {\n      return \"Solution that this package will be added to if you press the 'Add' button.\";\n    }    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as Rx from 'rxjs'\n\ninterface WebSocketConnection {\n  open: Rx.Observable<MessageEvent>;\n  messages: Rx.Subject<MessageEvent>;\n}\n\n@Injectable()\nexport class WebsocketService {\n\n  constructor() {}\n\n  private connection: WebSocketConnection;\n\n  public connect(url): WebSocketConnection {\n    if (!this.connection) {\n      this.connection = this.create(url);\n    }\n    return this.connection;\n  }\n\n  private create(url): WebSocketConnection {\n    let ws = new WebSocket(url);\n\n    let openObservable = Rx.Observable.create((obs: Rx.Observer<MessageEvent>) => {\n      ws.onopen = obs.next.bind(obs);\n      ws.onerror = obs.error.bind(obs);\n      ws.onclose = obs.complete.bind(obs);\n      return ws.close.bind(ws);\n    });\n\n    let messageObservable = Rx.Observable.create((obs: Rx.Observer<MessageEvent>) => {\n      ws.onmessage = obs.next.bind(obs);\n      ws.onerror = obs.error.bind(obs);\n      ws.onclose = obs.complete.bind(obs);\n      return ws.close.bind(ws);\n    });\n\n    let messageObserver = {\n      next: (data: Object) => {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(JSON.stringify(data));\n        }\n      }\n    };\n\n    return {open: openObservable, messages: Rx.Subject.create(messageObserver, messageObservable)};\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { MainComponent } from './main.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule, MatTabsModule, MatSelectModule, MatOptionModule, MatIconModule, MatTooltipModule, MatCardModule, MatProgressBarModule } from '@angular/material';\nimport { HeaderComponent } from './header/header.component';\nimport { ContentComponent } from './content/content.component';\nimport { PackagesComponent } from './packages/packages.component'\nimport { WebsocketService } from './websocket.service';\nimport { WpmService } from './wpm.service';\n\n@NgModule({\n  declarations: [\n    MainComponent,\n    HeaderComponent,\n    ContentComponent,\n    PackagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatCardModule,\n    MatProgressBarModule\n  ],\n  providers: [WebsocketService, WpmService],\n  bootstrap: [MainComponent]\n})\nexport class WpmModule { }\n","import { Injectable } from '@angular/core';\nimport { WebsocketService } from './websocket.service';\nimport { Subject, Observable, Observer } from 'rxjs';\nimport { map, share } from \"rxjs/operators\";\nimport * as Rx from 'rxjs'\n\nexport const PACKAGE_TYPE_WEB_COMPONENT = \"Web-Component\";\nexport const PACKAGE_TYPE_WEB_SERVICE = \"Web-Service\";\nexport const PACKAGE_TYPE_WEB_LAYOUT = \"Web-Layout\";\nexport const PACKAGE_TYPE_SOLUTION = \"Solution\";\n\ninterface Message {\n  method: string;\n  data?: any;\n  package?: Package;\n  url?: string;\n  solution?: string;\n}\n\nexport interface Release {\n  servoyVersion?: string;\n  url: string;\n  version: string;\n}\n\nexport interface Package {\n  activeSolution: string;\n  description: string;\n  displayName: string;\n  icon: string;\n  installed: string;\n  installedIsWPA: boolean;\n  installing: boolean;\n  name: string;\n  packageType: string;\n  releases: Release[];\n  removing: boolean;\n  selected: string;\n  sourceUrl: string;\n  top: boolean;\n  wikiUrl: string;\n}\n\nexport interface PackagesInfo {\n  packageType: string;\n  packages: Package[];\n}\n\nexport interface Repository {\n  name: string;\n  selected: boolean;\n}\n\n@Injectable()\nexport class WpmService {\n\n  messages: Subject<Message>;\n\n  packagesObservable: Observable<PackagesInfo>;\n  packagesObserver: Observer<PackagesInfo>;\n\n  solutions: string[];\n\n  repositories: Repository[];\n\n  needRefresh: boolean = false;\n\n  constructor(wsService: WebsocketService) {\n    let loc = window.location;\n    //let uri = \"ws://\"+loc.host+\"/wpm/angular2/websocket\";\n    let uri = \"ws://localhost:8080/wpm/angular2/websocket\";\n    let webSocketConnection = wsService.connect(uri);\n    webSocketConnection.open.subscribe(() => {\n      this.onConnectionOpen();\n    });\n    this.messages = <Subject<Message>>webSocketConnection.messages.pipe(map(\n      (response: MessageEvent): Message => {\n        let data = JSON.parse(response.data);\n        return {\n          method: data.method,\n          data: data.result\n        };\n      }));\n\n    this.messages.subscribe(m => {\n      this[m.method](m.data);\n    });\n\n\n    this.packagesObservable = Rx.Observable.create((obs: Rx.Observer<PackagesInfo>) => {\n      this.packagesObserver = obs;\n    }).pipe(share());\n  }\n\n  /**\n   * Callback for when connection is established\n   */\n  onConnectionOpen() {\n\n    let requestAllInstalledPackagesCommand: Message = { method: \"requestAllInstalledPackages\" };\n    // get solution name\n    let solutionName = decodeURIComponent((new RegExp('[?|&]solution=' + '([^&;]+?)(&|#|;|$)').exec(window.location.search)||[,\"\"])[1].replace(/\\+/g, '%20'))||null;\n    if(solutionName) {\n      requestAllInstalledPackagesCommand.solution = solutionName;\n    }\n    this.messages.next(requestAllInstalledPackagesCommand);\n\n    this.callRemoteMethod(\"getSolutionList\");\n    this.callRemoteMethod(\"getRepositories\");\n  }\n\n  /**\n   * Call remote method\n   * \n   * @param method name of the method\n   */\n  callRemoteMethod(method: string) {\n    let command: Message = { method: method };\n    this.messages.next(command);\n  }\n\n  getPackages(): Observable<PackagesInfo> {\n    return this.packagesObservable;\n  }\n\n  install(p: Package) {\n    p.installing = true;\n    let command: Message = { method: \"install\", package: p };\n    this.messages.next(command);\n  }\n\n  uninstall(p: Package) {\n    p.removing = true;\n    let command: Message = { method: \"remove\", package: p };\n    this.messages.next(command);\n  }\n\n  showUrl(url: string) {\n    let command: Message = { method: \"showurl\", url: url };\n    this.messages.next(command);\n  }\n\n  getSolutions(): string[] {\n    // TODO: this should be a promise\n    return this.solutions;\n  }\n\n  getActiveSolution(): string {\n    if (this.solutions && this.solutions.length) {\n      return this.solutions[this.solutions.length - 1];\n    }\n    return \"\";\n  }\n\n  isNeedRefresh(): boolean {\n    return this.needRefresh;\n  }\n\n  /**\n   * Remote method responses\n   */\n\n  requestAllInstalledPackages(packagesArray: Package[]) {\n    let typeOfPackages: Map<string, Package[]> = new Map();\n\n\t\tfor(let i = 0; i < packagesArray.length; i++) {\n      if(!typeOfPackages.has(packagesArray[i].packageType)) {\n        typeOfPackages.set(packagesArray[i].packageType, []);\n      }\n      let packages: Package[] = typeOfPackages.get(packagesArray[i].packageType);\n      packages.push(packagesArray[i]);\n    }\n    \n    typeOfPackages.forEach((pks, typ) => {\n      this.packagesObserver.next({ packageType: typ, packages: pks });  \n    });\n  }\n\n  getSolutionList(solutionsArray: string[]) {\n    this.solutions = solutionsArray;\n  }\n\n  getRepositories(repositoriesArray: Repository[]) {\n    this.repositories = repositoriesArray;\n  }\n\n  refreshRemotePackages = function(){\n\t\tthis.needRefresh = true;\n\t}\n}\n"],"sourceRoot":""}