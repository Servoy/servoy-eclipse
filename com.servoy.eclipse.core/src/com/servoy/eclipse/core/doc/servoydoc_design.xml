<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<servoydoc>
  <designtime>
    <object clientSupport="ng,mc,wc,sc" publicName="Bean" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsBean" scriptingName="Bean">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Button" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsButton" scriptingName="Button">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="dataIcon">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[Icon for a button, this must be one of:
alert
arrow-d
arrow-l
arrow-r
arrow-u
back
bars
check
delete
edit
forward
gear
grid
home
info
minus
plus
refresh
search
star]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[Icon for a button, this must be one of:
alert
arrow-d
arrow-l
arrow-r
arrow-u
back
bars
check
delete
edit
forward
gear
grid
home
info
minus
plus
refresh
search
star]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying data(using dataProviderID) in the label/button.
Some examples are "#%", "dd-MM-yyyy", "MM-dd-yyyy", etc.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying data(using dataProviderID) in the label/button.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="imageMedia">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The image Media object that should be displayed inside the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The image Media object that should be displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="labelFor">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Some components can be set to be labels of other components. This is useful in
two situations. In table view mode it is used for constructing the header of the
table. In record view mode, by setting mnemonics on the label, keyboard shortcuts
can be used to set the focus to fields.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Some components can be set to be labels of other components.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mediaOptions">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Options to scale the image Media object that is displayed inside the component.
Can be set to one or a combination of CROP, REDUCE, ENLARGE and KEEPASPECT.

REDUCE will scale down the image if the component is smaller than the image.
REDUCE combined with KEEPASPECT will reduce the image, but keep its aspect ratio.
This is useful when the component has other proportions than the image.

ENLARGE will scale up the image if the component is larger than the image.
ENLARGE combined with KEEPASPECT will scale up the image while keeping its aspect ratio.

CROP will leave the image at its original size. If the component is smaller than
the image this will result in only a part of the image showing up.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Options to scale the image Media object that is displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mnemonic">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The keyboard shortcut that activates this component. A letter must be specified,
and the actual shortcut will be combination of ALT + the specified letter.

This property can be used in two ways. Normally the keyboard shortcut activates
the onClick event of the component. But if the "labelFor" property is set for the
component, then the keyboard shortcut will move the focus to the component whose
label this component is.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The keyboard shortcut that activates this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rolloverCursor">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The cursor that is shown as the mouse is rolled over the component.
Possible options are DEFAULT and HAND. Note that roll over cursor is not supported in Smart client for list view and tableview forms.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The cursor that is shown as the mouse is rolled over the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rolloverImageMedia">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The roll over image Media object used. It will only work if a property image is also used.
When the mouse is moved over the component, this image Media will be displayed.
When the mouse is moved out of the component, whatever text or image was being initially
displayed will be restored. Note that roll over image is not supported in Smart client for list view and tableview forms.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The roll over image Media object used.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showClick">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set, the element will show the clicked state when selected.
Applies to labels and buttons and images only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set, the element will show the clicked state when selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showFocus">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set the text of an element will showfocus when selected.
Applies to labels and buttons only.
The text property for the element MUST be filled in first.

NOTE: The TAB key may also be used to select the element, depending
on the operating system being used and the selected LAF.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set the text of an element will showfocus when selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="text">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed inside the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="textRotation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The rotation of the element. You can choose 0, 90, 180, or 270 and the label is rotated accordingly.
This property also applies to buttons and images.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The rotation of the element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="verticalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The vertical alignment of the text inside the component. Can be one of
TOP, CENTER or BOTTOM.

Note that this property does not refer to the vertical alignment of the
component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The vertical alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,mc,wc,sc" name="onAction" undocumented="true"/>
        <event clientSupport="ng,wc,sc" name="onDoubleClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is double clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is double clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Calendar" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsCalendar" scriptingName="Calendar">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displayType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field. Can be one of CALENDAR, CHECKS,
COMBOBOX, HTML_AREA, IMAGE_MEDIA, PASSWORD, RADIOS, RTF_AREA, TEXT_AREA,
TEXT_FIELD, TYPE_AHEAD, LIST_BOX, MULTISELECT_LISTBOX or SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="editable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.
The default value of this flag is "true", that is the content can be edited.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.
There are different options for the different dataprovider types that are assigned to this field.
For Integer fields, there is a display and an edit format, using http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html and the max (string) length can be set.
For Text/String fields, there are options to force uppercase,lowercase or only numbers. Or a mask can be set that restrict the input the pattern chars can be found here: http://docs.oracle.com/javase/7/docs/api/javax/swing/text/MaskFormatter.html
A mask can have a placehoder (what is shown when there is no data) and if the data must be stored raw (without literals of the mask). A max text length can also be set to force
the max text length input, this doesn't work on mask because that max length is controlled with the mask.
For Date fields a display and edit format can be set by using a pattern from here: http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html, you can also say this must behave like a mask (the edit format)
A mask only works with when the edit format is exactly that mask (1 char is 1 number/char), because for example MM then only 2 numbers are allowed MMM that displays the month as a string is not supported as a mask.
Some examples are "dd-MM-yyyy", "MM-dd-yyyy", etc.
The format property is also used to set the UI Converter, this means that you can convert the value object to something else before it gets set into the field, this can also result in a type change of the data. 
So a string in scripting/db is converted to a integer in the ui, then you have to set an integer format. 
This property is applicable only for types: TEXT_FIELD, COMBOBOX, TYPE_AHEAD, CALENDAR and SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="selectOnEnter">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus. The default value of this field is "false".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="titleDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="titleDisplaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="valuelist">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data. Can be used
with fields of type CHECKS, COMBOBOX, RADIOS and TYPE_AHEAD.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,mc,wc,sc" name="onAction">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onDataChange">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></summary>
          </summaries>
          <parameters>
            <parameter name="oldValue">
              <description><![CDATA[old value]]></description>
            </parameter>
            <parameter name="newValue">
              <description><![CDATA[new value]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusGained">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.
NOTE: Do not call methods that will influence the focus itself.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusLost">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="CheckBoxes" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsCheckBoxes" scriptingName="CheckBoxes">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displayType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field. Can be one of CALENDAR, CHECKS,
COMBOBOX, HTML_AREA, IMAGE_MEDIA, PASSWORD, RADIOS, RTF_AREA, TEXT_AREA,
TEXT_FIELD, TYPE_AHEAD, LIST_BOX, MULTISELECT_LISTBOX or SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="editable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.
The default value of this flag is "true", that is the content can be edited.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.
There are different options for the different dataprovider types that are assigned to this field.
For Integer fields, there is a display and an edit format, using http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html and the max (string) length can be set.
For Text/String fields, there are options to force uppercase,lowercase or only numbers. Or a mask can be set that restrict the input the pattern chars can be found here: http://docs.oracle.com/javase/7/docs/api/javax/swing/text/MaskFormatter.html
A mask can have a placehoder (what is shown when there is no data) and if the data must be stored raw (without literals of the mask). A max text length can also be set to force
the max text length input, this doesn't work on mask because that max length is controlled with the mask.
For Date fields a display and edit format can be set by using a pattern from here: http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html, you can also say this must behave like a mask (the edit format)
A mask only works with when the edit format is exactly that mask (1 char is 1 number/char), because for example MM then only 2 numbers are allowed MMM that displays the month as a string is not supported as a mask.
Some examples are "dd-MM-yyyy", "MM-dd-yyyy", etc.
The format property is also used to set the UI Converter, this means that you can convert the value object to something else before it gets set into the field, this can also result in a type change of the data. 
So a string in scripting/db is converted to a integer in the ui, then you have to set an integer format. 
This property is applicable only for types: TEXT_FIELD, COMBOBOX, TYPE_AHEAD, CALENDAR and SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="scrollbars">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars. Each of the
vertical and horizontal scrollbars can be configured to display all the time,
to display only when needed or to never display.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="titleDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="titleDisplaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="valuelist">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data. Can be used
with fields of type CHECKS, COMBOBOX, RADIOS and TYPE_AHEAD.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,mc,wc,sc" name="onAction">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onDataChange">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></summary>
          </summaries>
          <parameters>
            <parameter name="oldValue">
              <description><![CDATA[old value]]></description>
            </parameter>
            <parameter name="newValue">
              <description><![CDATA[new value]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusGained">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.
NOTE: Do not call methods that will influence the focus itself.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusLost">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="ColumnInfo" qualifiedName="com.servoy.j2db.persistence.ColumnInfo">
      <properties>
        <property clientSupport="ng,mc,wc,sc" name="autoEnterSubType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The subtype of autoenter configured for the column. The available options depend
on the type of autoenter.

If autoenter is set to system value, then the subtype can be one of: none, creation datetime,
creation username, modification datetime, modification username, database managed,
creation user uid, modification user uid, creation server datetime or modification server datetime.

If autoenter is set to sequence, then the subtype can be one of: none, Servoy sequence,
database sequence, database identity or universally unique identifier.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The subtype of autoenter configured for the column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="autoEnterType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of autoenter configured for the column. Can be one of: none,
system value, sequence, custom value or lookup value.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of autoenter configured for the column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="converterName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the converter used for this column.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the converter used for this column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="converterProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The properties of the converter used for this column.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The properties of the converter used for this column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="databaseDefaultValue">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The database default value that is used when autoenter is set to database default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The database default value that is used when autoenter is set to database default.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="databaseSequenceName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The database sequence name that is used when autoenter is set to sequence and autoenter subtype
is set to database sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The database sequence name that is used when autoenter is set to sequence and autoenter subtype
is set to database sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="defaultFormat">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The default format of the column.
Currently only strings or numbers are supported.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The default format of the column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="defaultValue">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The value that is used when autoenter is set to custom value.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The value that is used when autoenter is set to custom value.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="description">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The description of the column.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The description of the column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="foreignType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The foreign type of the column. It is used for foreign key columns, to hold the foreign table they point to.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The foreign type of the column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="lookupValue">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The lookup value that is used when autotype is set to lookup.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The lookup value that is used when autotype is set to lookup.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The title of the column.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The title of the column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="validatorName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the validator used for the column.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the validator used for the column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="validatorProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The properties of the validator used for the column.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The properties of the validator used for the column.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="ComboBox" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsComboBox" scriptingName="ComboBox">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displayType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field. Can be one of CALENDAR, CHECKS,
COMBOBOX, HTML_AREA, IMAGE_MEDIA, PASSWORD, RADIOS, RTF_AREA, TEXT_AREA,
TEXT_FIELD, TYPE_AHEAD, LIST_BOX, MULTISELECT_LISTBOX or SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="editable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.
The default value of this flag is "true", that is the content can be edited.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.
There are different options for the different dataprovider types that are assigned to this field.
For Integer fields, there is a display and an edit format, using http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html and the max (string) length can be set.
For Text/String fields, there are options to force uppercase,lowercase or only numbers. Or a mask can be set that restrict the input the pattern chars can be found here: http://docs.oracle.com/javase/7/docs/api/javax/swing/text/MaskFormatter.html
A mask can have a placehoder (what is shown when there is no data) and if the data must be stored raw (without literals of the mask). A max text length can also be set to force
the max text length input, this doesn't work on mask because that max length is controlled with the mask.
For Date fields a display and edit format can be set by using a pattern from here: http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html, you can also say this must behave like a mask (the edit format)
A mask only works with when the edit format is exactly that mask (1 char is 1 number/char), because for example MM then only 2 numbers are allowed MMM that displays the month as a string is not supported as a mask.
Some examples are "dd-MM-yyyy", "MM-dd-yyyy", etc.
The format property is also used to set the UI Converter, this means that you can convert the value object to something else before it gets set into the field, this can also result in a type change of the data. 
So a string in scripting/db is converted to a integer in the ui, then you have to set an integer format. 
This property is applicable only for types: TEXT_FIELD, COMBOBOX, TYPE_AHEAD, CALENDAR and SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="selectOnEnter">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus. The default value of this field is "false".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="titleDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="titleDisplaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="valuelist">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data. Can be used
with fields of type CHECKS, COMBOBOX, RADIOS and TYPE_AHEAD.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,mc,wc,sc" name="onAction">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onDataChange">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></summary>
          </summaries>
          <parameters>
            <parameter name="oldValue">
              <description><![CDATA[old value]]></description>
            </parameter>
            <parameter name="newValue">
              <description><![CDATA[new value]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusGained">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.
NOTE: Do not call methods that will influence the focus itself.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusLost">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc" publicName="Footer" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsFooter" scriptingName="Footer">
      <properties>
        <property clientSupport="ng,mc" name="sticky">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[If true, the part will not move when content is being scrolled.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[If true, the part will not move when content is being scrolled.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The jQuery mobile style (theme) to use for this field.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The jQuery mobile style (theme) to use for this field.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Form" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsForm" scriptingName="Form">
      <properties>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border.
This property is automatically set to "DEFAULT" when a new form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataSource">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The names of the database server and table that this form is linked to.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The names of the database server and table that this form is linked to.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="defaultPageFormat">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The default page format for the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The default page format for the form.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="deprecated">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><![CDATA[the deprecate info for this element or null if it is not deprecated]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Gets the deprecate info for this element]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Gets the deprecate info for this element]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="encapsulation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[the encapsulation mode/level of the persist.]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The encapsulation mode of this persist. The following can be used/checked:

- Public (not a separate option - if none of the below options are selected)
- Hide in scripting; Module Scope - not available in scripting from any other context except the form itself. Available in designer for the same module.
- Module Scope - available in both scripting and designer but only in the same module.
- Hide Dataproviders (checked by default)
- Hide Foundset (checked by default)
- Hide Controller (checked by default)
- Hide Elements (checked by default)]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The encapsulation mode of this persist.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="extendsForm">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[the parent]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The selected parent (extended element) for the element (form).]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The selected parent (extended element) for the element (form).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formComponent" undocumented="true">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
        </property>
        <property clientSupport="ng,wc,sc" name="initialSort">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The default sort order only when the form loads.
This is applied each time an internal SQL query is being executed (find, find-all, open form); and is only executed when no other manual sort has been performed on the foundset.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The default sort order only when the form loads.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the form.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="namedFoundSet">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property that tells the form to use a named foundset instead of the default foundset.
When "separate" as special value is specified the form will always create a copy of assigned foundset and therefor become separated from other foundsets.
When "empty" it will initially load an empty foundset.
When a global relation name it will load the a related foundset.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property that tells the form to use a named foundset instead of the default foundset.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="navigator">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[The navigator is a form that usually handles navigation in application. It is displayed on left side of the screen. Can also have value SM_DEFAULTS.NONE (no navigator) or SM_DEFAULTS.IGNORE (reuse current form navigator).]]></description>
            <description clientSupport="ng,wc,sc"><![CDATA[The navigator (previously named "controller")
that is used to control/navigate to the form. The navigator is shown at
the left or at the right side of the form, depending on the page orientation.

The following options are available:
-none- - no navigator is assigned.
DEFAULT - the Servoy default navigator is assigned.
IGNORE - the navigator last assigned to a previous form.
Custom - a custom navigator based on a selected form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[The navigator is a form that usually handles navigation in application.]]></summary>
            <summary clientSupport="ng,wc,sc"><![CDATA[The navigator (previously named "controller")
that is used to control/navigate to the form.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="paperPrintScale">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The percentage value the printed page is enlarged or reduced to; the size of the printed form
is inversely proportional. For example, if the paperPrintScale is 50, the printed form will be
enlarged 200%.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The percentage value the printed page is enlarged or reduced to; the size of the printed form
is inversely proportional.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rowBGColorCalculation">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The calculation dataprovider used to add background color and highlight selected or alternate rows.
The default is -none-.

NOTE: This property has been deprecated and is kept visible for legacy purposes. Use CSS Row Styling & onRender event instead.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The calculation dataprovider used to add background color and highlight selected or alternate rows.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="scrollbars">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars. Each of the
vertical and horizontal scrollbars can be configured to display all the time,
to display only when needed or to never display.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="selectionMode">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[one of IForm#SELECTION_MODE_DEFAULT, IForm#SELECTION_MODE_SINGLE and IForm#SELECTION_MODE_MULTI.]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Returns the value of the selectionMode property.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Returns the value of the selectionMode property.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" deprecated="true" name="serverName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Get the server name used by this form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Get the server name used by this form.]]></summary>
          </summaries>
        </property>
        <property clientSupport="sc" name="showInMenu">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="sc"><![CDATA[When set, the form is displayed under the Window menu.
If it is not set, the form will be 'hidden'.
NOTE: This is only applicable for Servoy Client. Servoy Developer always shows all forms so that
developers have access to all forms within a solution during development.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[When set, the form is displayed under the Window menu.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The Cascading Style Sheet (CSS) class name applied to the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The Cascading Style Sheet (CSS) class name applied to the form.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="styleName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The name of the Servoy style that is being used on the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The name of the Servoy style that is being used on the form.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" deprecated="true" name="tableName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The [name of the table/SQL view].[the name of the database server connection] the form is based on.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The [name of the table/SQL view].]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text that displays in the title bar of the form window.
NOTE: Data tags and Servoy tags can be used as part of the title text.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text that displays in the title bar of the form window.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set, the form is transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set, the form is transparent.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="view">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The default form view mode.

The view can be changed using a method at runtime. The following views are available:
- Record view
- List view
- Record view (locked)
- List view (locked)
- Table View (locked)

NOTE: Only Table View (locked) uses asynchronized related data loading.
This feature defers all related foundset data loading to the background - enhancing
the visual display of a related foundset.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The default form view mode.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="width">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width of the form in pixels.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width of the form in pixels.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="wc,sc" name="onDrag">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="java.lang.Number"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging occurs.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging occurs.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.dnd.JSDNDEvent" typecode="com.servoy.j2db.dnd.JSDNDEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onDragEnd">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging end occurs.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging end occurs.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.dnd.JSDNDEvent" typecode="com.servoy.j2db.dnd.JSDNDEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onDragOver">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging over a component occurs.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging over a component occurs.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.dnd.JSDNDEvent" typecode="com.servoy.j2db.dnd.JSDNDEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onDrop">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dropping occurs.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dropping occurs.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.dnd.JSDNDEvent" typecode="com.servoy.j2db.dnd.JSDNDEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onElementDataChange">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Method that is executed when the data in one of the form's component is successfully changed and
the onDataChange callback from the component does not exist or exists and returned true]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Method that is executed when the data in one of the form's component is successfully changed and
the onDataChange callback from the component does not exist or exists and returned true]]></summary>
          </summaries>
          <parameters>
            <parameter name="oldValue">
              <description><![CDATA[old value]]></description>
            </parameter>
            <parameter name="newValue">
              <description><![CDATA[new value]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onElementFocusGained">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is triggered when focus is gained by a component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is triggered when focus is gained by a component inside the form.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onElementFocusLost">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that gets triggered when focus is lost by a component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that gets triggered when focus is lost by a component inside the form.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onHide">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is triggered when another form is being activated.
NOTE: If the onHide method returns false, the form can be prevented from hiding.
For example, when using onHide with showFormInDialog, the form will not close by clicking the dialog close box (X).]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is triggered when another form is being activated.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onLoad">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is triggered when a form is loaded/reloaded from the repository; used to alter elements, set globals, hide toolbars,
etc; onShow method can also be assigned.
NOTE: onShow should be used to access current foundset dataproviders; onLoad cannot be used because the foundset data is not loaded until after the form is loaded.
Also calls to loadRecords() should be done in the onShow method and not in the onLoad method
If you call loadRecords() in the onShow method, you may want to set the namedFoundSet property of the form to 'empty' to prevent the first default form query.
NOTE: the onLoad event bubbles down, meaning that the onLoad is first fired on the parent then on a tab in a tabpanel (and in tab of that tab panels if you are 3 deep)]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is triggered when a form is loaded/reloaded from the repository; used to alter elements, set globals, hide toolbars,
etc; onShow method can also be assigned.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onRecordEditStart">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is triggered when a user clicks into a column on the form.
NOTE: There is a small "e" displayed in the lower left side of the Servoy Client screen in the status area at the bottom of the window when the record is being edited.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is triggered when a user clicks into a column on the form.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onRecordEditStop">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is triggered when a record is being saved.
A record is saved when a user clicks out of it (for example on an empty part of the layout or to another form).
When the method returns false (for example as part of a validation), the user cannot leave the record, for example in
a table view a user cannot move to another record when the callback returns false.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is triggered when a record is being saved.]]></summary>
          </summaries>
          <parameters>
            <parameter name="record" type="com.servoy.j2db.dataprocessing.Record" typecode="com.servoy.j2db.dataprocessing.Record">
              <description><![CDATA[record being saved]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onRecordSelection">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is triggered each time a record is selected.
If a form is in List view or Special table view - when the user clicks on it.
In Record view - after the user navigates to another record using the slider or clicks up or down for next/previous record.
NOTE: Data and Servoy tag values are returned when the onRecordSelection method is executed.
NOTE: this will also fire if the selection goes to -1 because the foundset is cleared. So foundset.getSelectedRecord() can return null.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is triggered each time a record is selected.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSRenderEvent" typecode="com.servoy.j2db.scripting.JSRenderEvent">
              <description><![CDATA[the render event]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onResize">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that gets triggered when resize occurs.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that gets triggered when resize occurs.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onShow">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is triggered EVERY TIME the form is displayed; an argument must be passed to the method if this is the first time the form is displayed.

NOTE: onShow can be used to access current foundset dataproviders; onLoad cannot be used because the foundset data is not loaded until after the form is loaded.

NOTE: the onShow event bubbles down, meaning that the onShow event of a form displayed in a tabPanel is fired after the onShow event of the parent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is triggered EVERY TIME the form is displayed; an argument must be passed to the method if this is the first time the form is displayed.]]></summary>
          </summaries>
          <parameters>
            <parameter name="firstShow" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean">
              <description><![CDATA[form is shown first time after load]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onUnLoad">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is triggered when a form is unloaded from the repository.
NOTE: Forms can be prevented from being removed from memory by referencing the form object in a global variable or inside an array inside a global variable. Do take care using this technique.
Forms take up memory and if too many forms are in memory and cannot be unloaded, there is a possibility of running out of memory.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is triggered when a form is unloaded from the repository.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
      <commands>
        <command clientSupport="sc" name="onDeleteAllRecords">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Delete All.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Delete All.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onDeleteRecord">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Delete Record (or keyboard shortcut).
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Delete Record (or keyboard shortcut).]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onDuplicateRecord">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Duplicate Record (or keyboard shortcut).
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Duplicate Record (or keyboard shortcut).]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onFind">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Find (or keyboard shortcut) in Data (ready) mode.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Find (or keyboard shortcut) in Data (ready) mode.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onInvertRecords">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Invert Records.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Invert Records.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onNewRecord">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > New Record (or keyboard shortcut).
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > New Record (or keyboard shortcut).]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onNextRecord">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Next Record.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Next Record.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onOmitRecord">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Omit Record.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Omit Record.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onPreviousRecord">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Previous Record.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Previous Record.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="wc,sc" name="onPrintPreview">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that overrides the Servoy menu item File > Print Preview.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that overrides the Servoy menu item File > Print Preview.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onSearch">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Search (or keyboard shortcut) in Find mode.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Search (or keyboard shortcut) in Find mode.]]></summary>
          </summaries>
          <parameters>
            <parameter name="clear" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean">
              <description><![CDATA[clear last results]]></description>
            </parameter>
            <parameter name="reduce" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean">
              <description><![CDATA[reduce search]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onShowAllRecords">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Show All (or keyboard shortcut).
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Show All (or keyboard shortcut).]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="sc" name="onShowOmittedRecords">
          <descriptions>
            <description clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Show Omitted Records.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="sc"><![CDATA[The method that overrides the Servoy menu item Select > Show Omitted Records.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
        <command clientSupport="ng,wc,sc" name="onSort">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that overrides the Servoy menu item Select > Sort.
This property is automatically set to "DEFAULT" (no override) when the form is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that overrides the Servoy menu item Select > Sort.]]></summary>
          </summaries>
          <parameters>
            <parameter name="dataProviderID" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String">
              <description><![CDATA[element data provider]]></description>
            </parameter>
            <parameter name="asc" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean">
              <description><![CDATA[sort ascending [true] or descending [false]]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </command>
      </commands>
    </object>
    <object clientSupport="ng,mc" publicName="Header" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsHeader" scriptingName="Header">
      <properties>
        <property clientSupport="ng,mc" name="sticky">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[If true, the part will not move when content is being scrolled.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[If true, the part will not move when content is being scrolled.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The jQuery mobile style (theme) to use for this field.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The jQuery mobile style (theme) to use for this field.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc" publicName="HeaderTitle" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsHeaderTitle" scriptingName="HeaderTitle">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying data(using dataProviderID) in the label/button.
Some examples are "#%", "dd-MM-yyyy", "MM-dd-yyyy", etc.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying data(using dataProviderID) in the label/button.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="imageMedia">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The image Media object that should be displayed inside the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The image Media object that should be displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="labelFor">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Some components can be set to be labels of other components. This is useful in
two situations. In table view mode it is used for constructing the header of the
table. In record view mode, by setting mnemonics on the label, keyboard shortcuts
can be used to set the focus to fields.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Some components can be set to be labels of other components.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mediaOptions">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Options to scale the image Media object that is displayed inside the component.
Can be set to one or a combination of CROP, REDUCE, ENLARGE and KEEPASPECT.

REDUCE will scale down the image if the component is smaller than the image.
REDUCE combined with KEEPASPECT will reduce the image, but keep its aspect ratio.
This is useful when the component has other proportions than the image.

ENLARGE will scale up the image if the component is larger than the image.
ENLARGE combined with KEEPASPECT will scale up the image while keeping its aspect ratio.

CROP will leave the image at its original size. If the component is smaller than
the image this will result in only a part of the image showing up.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Options to scale the image Media object that is displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mnemonic">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The keyboard shortcut that activates this component. A letter must be specified,
and the actual shortcut will be combination of ALT + the specified letter.

This property can be used in two ways. Normally the keyboard shortcut activates
the onClick event of the component. But if the "labelFor" property is set for the
component, then the keyboard shortcut will move the focus to the component whose
label this component is.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The keyboard shortcut that activates this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rolloverCursor">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The cursor that is shown as the mouse is rolled over the component.
Possible options are DEFAULT and HAND. Note that roll over cursor is not supported in Smart client for list view and tableview forms.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The cursor that is shown as the mouse is rolled over the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rolloverImageMedia">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The roll over image Media object used. It will only work if a property image is also used.
When the mouse is moved over the component, this image Media will be displayed.
When the mouse is moved out of the component, whatever text or image was being initially
displayed will be restored. Note that roll over image is not supported in Smart client for list view and tableview forms.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The roll over image Media object used.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showClick">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set, the element will show the clicked state when selected.
Applies to labels and buttons and images only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set, the element will show the clicked state when selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showFocus">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set the text of an element will showfocus when selected.
Applies to labels and buttons only.
The text property for the element MUST be filled in first.

NOTE: The TAB key may also be used to select the element, depending
on the operating system being used and the selected LAF.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set the text of an element will showfocus when selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="text">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed inside the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="textRotation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The rotation of the element. You can choose 0, 90, 180, or 270 and the label is rotated accordingly.
This property also applies to buttons and images.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The rotation of the element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="verticalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The vertical alignment of the text inside the component. Can be one of
TOP, CENTER or BOTTOM.

Note that this property does not refer to the vertical alignment of the
component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The vertical alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,wc,sc" name="onAction" undocumented="true"/>
        <event clientSupport="ng,wc,sc" name="onDoubleClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is double clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is double clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,wc,sc" publicName="Image" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsImage">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying data(using dataProviderID) in the label/button.
Some examples are "#%", "dd-MM-yyyy", "MM-dd-yyyy", etc.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying data(using dataProviderID) in the label/button.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="imageMedia">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The image Media object that should be displayed inside the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The image Media object that should be displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="labelFor">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Some components can be set to be labels of other components. This is useful in
two situations. In table view mode it is used for constructing the header of the
table. In record view mode, by setting mnemonics on the label, keyboard shortcuts
can be used to set the focus to fields.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Some components can be set to be labels of other components.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mediaOptions">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Options to scale the image Media object that is displayed inside the component.
Can be set to one or a combination of CROP, REDUCE, ENLARGE and KEEPASPECT.

REDUCE will scale down the image if the component is smaller than the image.
REDUCE combined with KEEPASPECT will reduce the image, but keep its aspect ratio.
This is useful when the component has other proportions than the image.

ENLARGE will scale up the image if the component is larger than the image.
ENLARGE combined with KEEPASPECT will scale up the image while keeping its aspect ratio.

CROP will leave the image at its original size. If the component is smaller than
the image this will result in only a part of the image showing up.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Options to scale the image Media object that is displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mnemonic">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The keyboard shortcut that activates this component. A letter must be specified,
and the actual shortcut will be combination of ALT + the specified letter.

This property can be used in two ways. Normally the keyboard shortcut activates
the onClick event of the component. But if the "labelFor" property is set for the
component, then the keyboard shortcut will move the focus to the component whose
label this component is.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The keyboard shortcut that activates this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rolloverCursor">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The cursor that is shown as the mouse is rolled over the component.
Possible options are DEFAULT and HAND. Note that roll over cursor is not supported in Smart client for list view and tableview forms.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The cursor that is shown as the mouse is rolled over the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rolloverImageMedia">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The roll over image Media object used. It will only work if a property image is also used.
When the mouse is moved over the component, this image Media will be displayed.
When the mouse is moved out of the component, whatever text or image was being initially
displayed will be restored. Note that roll over image is not supported in Smart client for list view and tableview forms.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The roll over image Media object used.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showClick">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set, the element will show the clicked state when selected.
Applies to labels and buttons and images only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set, the element will show the clicked state when selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showFocus">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set the text of an element will showfocus when selected.
Applies to labels and buttons only.
The text property for the element MUST be filled in first.

NOTE: The TAB key may also be used to select the element, depending
on the operating system being used and the selected LAF.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set the text of an element will showfocus when selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="text">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text that is displayed inside the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text that is displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="textRotation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The rotation of the element. You can choose 0, 90, 180, or 270 and the label is rotated accordingly.
This property also applies to buttons and images.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The rotation of the element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="verticalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The vertical alignment of the text inside the component. Can be one of
TOP, CENTER or BOTTOM.

Note that this property does not refer to the vertical alignment of the
component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The vertical alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,wc,sc" name="onAction" undocumented="true"/>
        <event clientSupport="ng,wc,sc" name="onDoubleClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is double clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is double clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc" publicName="InsetList" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsInsetList" scriptingName="InsetList">
      <properties>
        <property clientSupport="mc" name="countDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for countbubble in list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for countbubble in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="dataIconDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for icon type in list. Overrides dataIconType property.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for icon type in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="dataIconType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Icon type for list.
Possible values: 
 alert 
 arrow-d 
 arrow-l 
 arrow-r 
 arrow-u 
 back 
 bars 
 check 
 delete 
 edit 
 forward 
 gear 
 grid 
 home 
 info 
 minus 
 plus 
 refresh 
 search 
 star]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Icon type for list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="headerDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[Dataprovider for header text in inset list. Overrides headerText property.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[Dataprovider for header text in inset list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="headerStyleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[The styleClass of the header.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[The styleClass of the header.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="headerText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[Header text property for inset list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[Header text property for inset list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="listStyleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[The styleClass of the list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[The styleClass of the list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="relationName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[The name of the relationship between the table related to the currently active 
form and the table you want to show data from in the inset list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[The name of the relationship between the table related to the currently active 
form and the table you want to show data from in the inset list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="subtext">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Text property for sub text in list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Text property for sub text in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="subtextDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for sub text in list. Overrides subtext property.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for sub text in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="text">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Text property for main text in list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Text property for main text in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="textDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for main text in list. Overrides text property.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for main text in list.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="mc" name="onAction">
          <descriptions>
            <description clientSupport="mc"><![CDATA[The method that is executed when the component is clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[The method that is executed when the component is clicked.]]></summary>
          </summaries>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Label" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsLabel" scriptingName="Label">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying data(using dataProviderID) in the label/button.
Some examples are "#%", "dd-MM-yyyy", "MM-dd-yyyy", etc.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying data(using dataProviderID) in the label/button.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="imageMedia">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The image Media object that should be displayed inside the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The image Media object that should be displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="labelFor">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Some components can be set to be labels of other components. This is useful in
two situations. In table view mode it is used for constructing the header of the
table. In record view mode, by setting mnemonics on the label, keyboard shortcuts
can be used to set the focus to fields.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Some components can be set to be labels of other components.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="labelSize">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[Label (header) size property.
Sets the header size on a label. Valid values are between 'h1' to 'h6',
default value is 'h4'.
The numbers match the heading tags h1 to h6 as used in html.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[Label (header) size property.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mediaOptions">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Options to scale the image Media object that is displayed inside the component.
Can be set to one or a combination of CROP, REDUCE, ENLARGE and KEEPASPECT.

REDUCE will scale down the image if the component is smaller than the image.
REDUCE combined with KEEPASPECT will reduce the image, but keep its aspect ratio.
This is useful when the component has other proportions than the image.

ENLARGE will scale up the image if the component is larger than the image.
ENLARGE combined with KEEPASPECT will scale up the image while keeping its aspect ratio.

CROP will leave the image at its original size. If the component is smaller than
the image this will result in only a part of the image showing up.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Options to scale the image Media object that is displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mnemonic">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The keyboard shortcut that activates this component. A letter must be specified,
and the actual shortcut will be combination of ALT + the specified letter.

This property can be used in two ways. Normally the keyboard shortcut activates
the onClick event of the component. But if the "labelFor" property is set for the
component, then the keyboard shortcut will move the focus to the component whose
label this component is.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The keyboard shortcut that activates this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rolloverCursor">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The cursor that is shown as the mouse is rolled over the component.
Possible options are DEFAULT and HAND. Note that roll over cursor is not supported in Smart client for list view and tableview forms.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The cursor that is shown as the mouse is rolled over the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rolloverImageMedia">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The roll over image Media object used. It will only work if a property image is also used.
When the mouse is moved over the component, this image Media will be displayed.
When the mouse is moved out of the component, whatever text or image was being initially
displayed will be restored. Note that roll over image is not supported in Smart client for list view and tableview forms.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The roll over image Media object used.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showClick">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set, the element will show the clicked state when selected.
Applies to labels and buttons and images only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set, the element will show the clicked state when selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showFocus">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set the text of an element will showfocus when selected.
Applies to labels and buttons only.
The text property for the element MUST be filled in first.

NOTE: The TAB key may also be used to select the element, depending
on the operating system being used and the selected LAF.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set the text of an element will showfocus when selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="text">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed inside the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="textRotation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The rotation of the element. You can choose 0, 90, 180, or 270 and the label is rotated accordingly.
This property also applies to buttons and images.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The rotation of the element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="titleDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="titleDisplaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Header text to component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Header text to component]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="titleVisible" undocumented="true">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="verticalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The vertical alignment of the text inside the component. Can be one of
TOP, CENTER or BOTTOM.

Note that this property does not refer to the vertical alignment of the
component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The vertical alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,wc,sc" name="onAction" undocumented="true"/>
        <event clientSupport="ng,wc,sc" name="onDoubleClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is double clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is double clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,wc,sc" publicName="Layout Container" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsLayoutContainer" scriptingName="LayoutContainer">
      <properties>
        <property clientSupport="ng,wc,sc" name="cssClasses">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The css classes to be output for html tag.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The css classes to be output for html tag.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="elementId">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The id to be output for html tag.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The id to be output for html tag.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the form.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size" undocumented="true">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
        </property>
        <property clientSupport="ng,wc,sc" name="tagType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The tag type for html output. Default value is 'div'.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The tag type for html output.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc" publicName="ListForm" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsListForm" scriptingName="ListForm">
      <properties>
        <property clientSupport="mc" name="countDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for countbubble in list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for countbubble in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="dataIconDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for icon type in list. Overrides dataIconType property.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for icon type in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="dataIconType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Icon type for list.
Possible values: 
 alert 
 arrow-d 
 arrow-l 
 arrow-r 
 arrow-u 
 back 
 bars 
 check 
 delete 
 edit 
 forward 
 gear 
 grid 
 home 
 info 
 minus 
 plus 
 refresh 
 search 
 star]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Icon type for list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="listStyleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[The styleClass of the list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[The styleClass of the list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="subtext">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Text property for sub text in list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Text property for sub text in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="subtextDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for sub text in list. Overrides subtext property.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for sub text in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="text">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Text property for main text in list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Text property for main text in list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="textDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for main text in list. Overrides text property.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for main text in list.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="mc" name="onAction">
          <descriptions>
            <description clientSupport="mc"><![CDATA[The method that is executed when the component is clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[The method that is executed when the component is clicked.]]></summary>
          </summaries>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Media" qualifiedName="com.servoy.j2db.persistence.Media">
      <properties>
        <property clientSupport="ng,mc,wc,sc" name="deprecated">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><![CDATA[the deprecate info for this element or null if it is not deprecated]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Gets the deprecate info for this element]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Gets the deprecate info for this element]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="encapsulation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[the encapsulation mode/level of the persist.]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The encapsulation mode of this Media. The following can be used:

- Public (available in both scripting and designer from any module)
- Module Scope - available in both scripting and designer but only in the same module.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The encapsulation mode of this Media.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mimeType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The MIME type of the Media object.

Some examples are: 'image/jpg', 'image/png', etc.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The MIME type of the Media object.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the Media object.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the Media object.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Method" qualifiedName="com.servoy.j2db.persistence.ScriptMethod">
      <properties>
        <property clientSupport="ng,mc,wc,sc" name="declaration">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The full source code of this method (including doc and function declaration).]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The full source code of this method (including doc and function declaration).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the method.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the method.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="scopeName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the scope.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the scope.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="showInMenu">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if the method appears or not in the "Methods" menu of Servoy Client.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if the method appears or not in the "Methods" menu of Servoy Client.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,wc,sc" publicName="Part" qualifiedName="com.servoy.j2db.persistence.Part">
      <properties>
        <property clientSupport="wc,sc" name="allowBreakAcrossPageBounds">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[When set, the remainder of a selected part that does not fit on the page currently
being printed, will not be transported to the next page - it will break where the page
ends and continue on the next page.

NOTE: Make sure to set this option when you are printing more than one page per record.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[When set, the remainder of a selected part that does not fit on the page currently
being printed, will not be transported to the next page - it will break where the page
ends and continue on the next page.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the form part.

NOTE: When no background color has been set, the default background
color will be determined by the Look and Feel (LAF) that has been selected
in Application Preferences.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the form part.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="discardRemainderAfterBreak">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[When set, the remainder of a selected part that is broken due to the page
ending will not be printed on the next page - it will be discarded.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[When set, the remainder of a selected part that is broken due to the page
ending will not be printed on the next page - it will be discarded.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="groupbyDataProviderIDs">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[For Leading Subsummary or Trailing Subsummary parts, one or more
dataproviders can be added as Break (GroupBy) dataproviders. The
Leading/Trailing Subsummary parts will be displayed once for each
resulted group of data.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[For Leading Subsummary or Trailing Subsummary parts, one or more
dataproviders can be added as Break (GroupBy) dataproviders.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="height">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The height of a selected part; specified in pixels.

This height property is the lowerbound as its ending Y value (0 == top of the form).]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The height of a selected part; specified in pixels.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="pageBreakAfterOccurrence">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[A page break will be inserted after a specified number of occurences of a selected part.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[A page break will be inserted after a specified number of occurences of a selected part.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="pageBreakBefore">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[When set, a page break will be inserted before each occurrence of a selected part.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[When set, a page break will be inserted before each occurrence of a selected part.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="partType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type of this part.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type of this part.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="restartPageNumber">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[When set, page numbering will be restarted after each occurrence of a selected part.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[When set, page numbering will be restarted after each occurrence of a selected part.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="sinkWhenLast">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[When set, the last part on a page (such as a Trailing Grand Summary part) will
"sink" to the lowest part of the page when there is free space.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[When set, the last part on a page (such as a Trailing Grand Summary part) will
"sink" to the lowest part of the page when there is free space.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The Cascading Style Sheet (CSS) class name applied to the part.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The Cascading Style Sheet (CSS) class name applied to the part.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Password" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsPassword" scriptingName="Password">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displayType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field. Can be one of CALENDAR, CHECKS,
COMBOBOX, HTML_AREA, IMAGE_MEDIA, PASSWORD, RADIOS, RTF_AREA, TEXT_AREA,
TEXT_FIELD, TYPE_AHEAD, LIST_BOX, MULTISELECT_LISTBOX or SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="editable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.
The default value of this flag is "true", that is the content can be edited.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.
There are different options for the different dataprovider types that are assigned to this field.
For Integer fields, there is a display and an edit format, using http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html and the max (string) length can be set.
For Text/String fields, there are options to force uppercase,lowercase or only numbers. Or a mask can be set that restrict the input the pattern chars can be found here: http://docs.oracle.com/javase/7/docs/api/javax/swing/text/MaskFormatter.html
A mask can have a placehoder (what is shown when there is no data) and if the data must be stored raw (without literals of the mask). A max text length can also be set to force
the max text length input, this doesn't work on mask because that max length is controlled with the mask.
For Date fields a display and edit format can be set by using a pattern from here: http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html, you can also say this must behave like a mask (the edit format)
A mask only works with when the edit format is exactly that mask (1 char is 1 number/char), because for example MM then only 2 numbers are allowed MMM that displays the month as a string is not supported as a mask.
Some examples are "dd-MM-yyyy", "MM-dd-yyyy", etc.
The format property is also used to set the UI Converter, this means that you can convert the value object to something else before it gets set into the field, this can also result in a type change of the data. 
So a string in scripting/db is converted to a integer in the ui, then you have to set an integer format. 
This property is applicable only for types: TEXT_FIELD, COMBOBOX, TYPE_AHEAD, CALENDAR and SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="placeholderText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed in field when the field doesn't have a text value.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed in field when the field doesn't have a text value.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="selectOnEnter">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus. The default value of this field is "false".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="titleDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="titleDisplaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="valuelist">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data. Can be used
with fields of type CHECKS, COMBOBOX, RADIOS and TYPE_AHEAD.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,mc,wc,sc" name="onAction">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onDataChange">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></summary>
          </summaries>
          <parameters>
            <parameter name="oldValue">
              <description><![CDATA[old value]]></description>
            </parameter>
            <parameter name="newValue">
              <description><![CDATA[new value]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusGained">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.
NOTE: Do not call methods that will influence the focus itself.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusLost">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,wc,sc" publicName="Portal" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsPortal" scriptingName="Portal">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="initialSort">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The default sort order for the rows displayed in the portal.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The default sort order for the rows displayed in the portal.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="intercellSpacing">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The additional spacing between cell rows. Is composed from the horizontal spacing
and the vertical spacing.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The additional spacing between cell rows.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="multiLine">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set, portal rows can have a custom layout of fields, buttons, etc. displayed for each
matching row (rather than the default "grid").]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set, portal rows can have a custom layout of fields, buttons, etc.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="ngReadOnlyMode" undocumented="true">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="relationName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the relationship between the table related to the currently active 
form and the table you want to show data from in the portal.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the relationship between the table related to the currently active 
form and the table you want to show data from in the portal.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="reorderable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set, the portal rows can be re-ordered by dragging the column headers.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set, the portal rows can be re-ordered by dragging the column headers.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="resizable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set the portal rows can be resized by users.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set the portal rows can be resized by users.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rowBGColorCalculation">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The calculation dataprovider (such as servoy_row_bgcolor) used to add background
color and highlight selected or alternate portal rows.

NOTE: This property has been deprecated and is kept visible for legacy purposes. Use CSS Row Styling & onRender event instead.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The calculation dataprovider (such as servoy_row_bgcolor) used to add background
color and highlight selected or alternate portal rows.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="rowHeight">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The height of each row in pixels. If 0 or not set, the height defaults to 10.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The height of each row in pixels.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="scrollbars">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars. Each of the
vertical and horizontal scrollbars can be configured to display all the time,
to display only when needed or to never display.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showHorizontalLines">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set, the portal displays horizontal lines between the rows.

NOTE:
In a multi-line portal, a horizontal line is only displayed
in the selected row; to display a horizontal line in all rows, add a
line to the portal.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set, the portal displays horizontal lines between the rows.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="showVerticalLines">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set the portal displays vertical lines between the columns.

NOTE:
In a multi-line portal, a vertical line is only displayed
in the selected row; to display a vertical line in all rows, add
a line to the portal.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set the portal displays vertical lines between the columns.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="sortable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[When set, users can sort the contents of the portal by clicking on the column headings.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[When set, users can sort the contents of the portal by clicking on the column headings.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="wc,sc" name="onDrag">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging occurs.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging occurs.]]></summary>
          </summaries>
        </event>
        <event clientSupport="wc,sc" name="onDragEnd">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging end occurs.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging end occurs.]]></summary>
          </summaries>
        </event>
        <event clientSupport="wc,sc" name="onDragOver">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging over a component occurs.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dragging over a component occurs.]]></summary>
          </summaries>
        </event>
        <event clientSupport="wc,sc" name="onDrop">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dropping occurs.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is triggered when (non Design Mode) dropping occurs.]]></summary>
          </summaries>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="RadioButtons" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsRadioButtons" scriptingName="RadioButtons">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displayType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field. Can be one of CALENDAR, CHECKS,
COMBOBOX, HTML_AREA, IMAGE_MEDIA, PASSWORD, RADIOS, RTF_AREA, TEXT_AREA,
TEXT_FIELD, TYPE_AHEAD, LIST_BOX, MULTISELECT_LISTBOX or SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="editable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.
The default value of this flag is "true", that is the content can be edited.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.
There are different options for the different dataprovider types that are assigned to this field.
For Integer fields, there is a display and an edit format, using http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html and the max (string) length can be set.
For Text/String fields, there are options to force uppercase,lowercase or only numbers. Or a mask can be set that restrict the input the pattern chars can be found here: http://docs.oracle.com/javase/7/docs/api/javax/swing/text/MaskFormatter.html
A mask can have a placehoder (what is shown when there is no data) and if the data must be stored raw (without literals of the mask). A max text length can also be set to force
the max text length input, this doesn't work on mask because that max length is controlled with the mask.
For Date fields a display and edit format can be set by using a pattern from here: http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html, you can also say this must behave like a mask (the edit format)
A mask only works with when the edit format is exactly that mask (1 char is 1 number/char), because for example MM then only 2 numbers are allowed MMM that displays the month as a string is not supported as a mask.
Some examples are "dd-MM-yyyy", "MM-dd-yyyy", etc.
The format property is also used to set the UI Converter, this means that you can convert the value object to something else before it gets set into the field, this can also result in a type change of the data. 
So a string in scripting/db is converted to a integer in the ui, then you have to set an integer format. 
This property is applicable only for types: TEXT_FIELD, COMBOBOX, TYPE_AHEAD, CALENDAR and SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc" name="horizontal">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc"><![CDATA[Show the radios as horizontal or vertical set.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc"><![CDATA[Show the radios as horizontal or vertical set.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="scrollbars">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars. Each of the
vertical and horizontal scrollbars can be configured to display all the time,
to display only when needed or to never display.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="titleDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="titleDisplaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="valuelist">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data. Can be used
with fields of type CHECKS, COMBOBOX, RADIOS and TYPE_AHEAD.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,mc,wc,sc" name="onAction">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onDataChange">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></summary>
          </summaries>
          <parameters>
            <parameter name="oldValue">
              <description><![CDATA[old value]]></description>
            </parameter>
            <parameter name="newValue">
              <description><![CDATA[new value]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusGained">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.
NOTE: Do not call methods that will influence the focus itself.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusLost">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,wc,sc" publicName="Rectangle" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsRectShape" scriptingName="Rectangle">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="lineSize">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width of the line used for drawing the rectangle.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width of the line used for drawing the rectangle.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="roundedRadius">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The rounding radius in pixels.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The rounding radius in pixels.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="shapeType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type of the shape. The type can be BORDER_PANEL, RECTANGLE, ROUNDED_RECTANGLE or OVAL.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type of the shape.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Relation" qualifiedName="com.servoy.j2db.persistence.Relation">
      <properties>
        <property clientSupport="ng,mc,wc,sc" name="allowCreationRelatedRecords">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if related records can be created through this relation.

The default value of this flag is "false".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if related records can be created through this relation.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="allowParentDeleteWhenHavingRelatedRecords">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if the parent record can be deleted while it has related records.

The default value of this flag is "true".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if the parent record can be deleted while it has related records.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="deleteRelatedRecords">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if related records should be deleted or not when a parent record is deleted.

The default value of this flag is "false".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if related records should be deleted or not when a parent record is deleted.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="deprecated">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><![CDATA[the deprecate info for this element or null if it is not deprecated]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Gets the deprecate info for this element]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Gets the deprecate info for this element]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="encapsulation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[the encapsulation mode/level of the persist.]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The encapsulation mode of this Relation. The following can be used/checked:

- Public (not a separate option - if none of the below options are selected)
- Hide in scripting; Module Scope - not available in scripting from any other context except the form itself. Available in designer for the same module.
- Module Scope - available in both scripting and designer but only in the same module.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The encapsulation mode of this Relation.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="foreignDataSource">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Qualified name of the foreign data source. Contains both the name of the foreign
server and the name of the foreign table.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Qualified name of the foreign data source.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="initialSort">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[A String which specified a set of sort options for the initial sorting of data
retrieved through this relation.

Has the form "column_name asc, another_column_name desc, ...".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[A String which specified a set of sort options for the initial sorting of data
retrieved through this relation.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="joinType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The join type that is performed between the primary table and the foreign table.
Can be "inner join" or "left outer join".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The join type that is performed between the primary table and the foreign table.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the relation.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the relation.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="primaryDataSource">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Qualified name of the primary data source. Contains both the name of the primary server
and the name of the primary table.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Qualified name of the primary data source.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="RelationItem" qualifiedName="com.servoy.j2db.persistence.RelationItem">
      <properties>
        <property clientSupport="ng,mc,wc,sc" name="foreignColumnName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the column from the destination table
that this relation item is based on.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the column from the destination table
that this relation item is based on.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="operator">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The operator that defines the relationship between the primary dataprovider
and the foreign column.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The operator that defines the relationship between the primary dataprovider
and the foreign column.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="primaryDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the column from the source table
that this relation item is based on.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the column from the source table
that this relation item is based on.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Solution" qualifiedName="com.servoy.j2db.persistence.Solution">
      <properties>
        <property clientSupport="ng,mc,wc,sc" name="firstForm">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The first form that loads when a solution is deployed.

NOTE: If the Login form is specified, then the firstForm is the first form that will load next after the loginForm.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The first form that loads when a solution is deployed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="i18nDataSource">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The i18n database server connection and database table that stores the i18n keys for a solution.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The i18n database server connection and database table that stores the i18n keys for a solution.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="loginForm">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the login form that loads when a solution is deployed.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the login form that loads when a solution is deployed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="loginSolutionName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Get the first module that is also a login solution.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Get the first module that is also a login solution.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="modulesNames">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The list of modules that have been added to a solution.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The list of modules that have been added to a solution.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="mustAuthenticate">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if authentication is needed in order to access the solution.
If unchecked, the Smart Client will always require authentication, regardless of this setting.
If checked, authentication is required, and either a provided loginSolution or otherwise the default Servoy login mechanism will be used.
If default Servoy login mechanism is used, the "servoy.webclient.basic.authentication" setting on the Admin Page can be used to enable the use of the standard browser basic authentication.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if authentication is needed in order to access the solution.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="solutionType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of a solution; can be "Normal" (non-module), "Module", "Web client only", "Smart client only",
"Login", "Authenticator", "Pre-import hook module", "Post-import hook module", "Mobile".
These constants are defined in SolutionMetaData class.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of a solution; can be "Normal" (non-module), "Module", "Web client only", "Smart client only",
"Login", "Authenticator", "Pre-import hook module", "Post-import hook module", "Mobile".]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng" name="styleSheet">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng"><![CDATA[The custom CSS used by the solution (a MEDIA lib entry). It can reference other media resources (even additional .css through relative '@import' statements).
For NGClient - this CSS will be available directly in the browser.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng"><![CDATA[The custom CSS used by the solution (a MEDIA lib entry).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="textOrientation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The direction that text is displayed.

Options include:
DEFAULT
left to right
right to left
locale specific]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The direction that text is displayed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The menu bar title of a solution.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The menu bar title of a solution.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,wc,sc" name="onClose">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when a solution closes. The default is -none-.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when a solution closes.]]></summary>
          </summaries>
          <parameters>
            <parameter name="force" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean">
              <description><![CDATA[if false then solution close can be stopped by returning false]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onDataBroadcast">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Method that is executed when data broadcast occurs. The default is -none-.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Method that is executed when data broadcast occurs.]]></summary>
          </summaries>
          <parameters>
            <parameter name="dataSource" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String">
              <description><![CDATA[table data source]]></description>
            </parameter>
            <parameter name="action" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="java.lang.Number">
              <description><![CDATA[see SQL_ACTION_TYPES constants]]></description>
            </parameter>
            <parameter name="pks" type="com.servoy.j2db.dataprocessing.JSDataSet" typecode="com.servoy.j2db.dataprocessing.JSDataSet">
              <description><![CDATA[affected primary keys]]></description>
            </parameter>
            <parameter name="cached" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean">
              <description><![CDATA[data was cached]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onError">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when a solution opens and an error occurs. The default is -none.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when a solution opens and an error occurs.]]></summary>
          </summaries>
          <parameters>
            <parameter name="ex" type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.lang.Object">
              <description><![CDATA[exception to handle]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onOpen">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when a solution opens. The default is -none-.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when a solution opens.]]></summary>
          </summaries>
          <parameters>
            <parameter name="arg" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String">
              <description><![CDATA[startup argument part of the deeplink url with which the Client was started]]></description>
            </parameter>
            <parameter name="queryParams">
              <description><![CDATA[all query parameters of the deeplink url with which the Client was started]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,wc,sc" publicName="Tab" qualifiedName="com.servoy.j2db.persistence.Tab">
      <properties>
        <property clientSupport="ng,wc,sc" name="containsForm">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the form displayed in the tab.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the form displayed in the tab.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the tab.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the tab.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="imageMedia">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the image Media file used.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the image Media file used.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="mnemonic">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Mnemonic used to switch to tab.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Mnemonic used to switch to tab.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the tab.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the tab.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="relationName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the relation that links the form which contains the tab 
with the form displayed in the tab.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the relation that links the form which contains the tab 
with the form displayed in the tab.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="text">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text on the tab.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text on the tab.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,wc,sc" publicName="TabPanel" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsTabPanel" scriptingName="TabPanel">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The horizontal alignment of the tabpanel.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The horizontal alignment of the tabpanel.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="scrollTabs">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells how to arrange the tabs if they don't fit on a single line.
If this flag is set, then the tabs will stay on a single line, but there will
be the possibility to scroll them to the left and to the right. If this flag
is not set, then the tabs will be arranged on multiple lines.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells how to arrange the tabs if they don't fit on a single line.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabOrientation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The position of the tabs related to the tab panel. Can be one of TOP, RIGHT, BOTTOM, LEFT,
HIDE, SPLIT_HORIZONTAL, SPLIT_VERTICAL, ACCORDION_PANEL. The HIDE option makes the tabs invisible, SPLIT_HORIZONTAL
makes the tab panel horizontal split pane, SPLIT_VERTICAL makes the tab panel vertical split pane, ACCORDION_PANEL turns
the tab panel into an accordion.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The position of the tabs related to the tab panel.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,wc,sc" name="onChange">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Method to be executed when the selected tab is changed in the tab panel or divider position is changed in split pane.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Method to be executed when the selected tab is changed in the tab panel or divider position is changed in split pane.]]></summary>
          </summaries>
          <parameters>
            <parameter name="previousIndex" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="java.lang.Number">
              <description><![CDATA[index of tab shown before the change]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,wc,sc" publicName="Table" qualifiedName="com.servoy.j2db.persistence.TableNode">
      <properties>
        <property clientSupport="ng,wc,sc" name="columns" undocumented="true">
          <return type="com.servoy.j2db.util.ServoyJSONObject" typecode="com.servoy.j2db.util.ServoyJSONObject"/>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,wc,sc" name="onAfterCreate">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed after a new record is created.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed after a new record is created.]]></summary>
          </summaries>
          <parameters>
            <parameter name="record" type="com.servoy.j2db.dataprocessing.Record" typecode="com.servoy.j2db.dataprocessing.Record">
              <description><![CDATA[record that is created]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onAfterDelete">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed after a delete operation.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed after a delete operation.]]></summary>
          </summaries>
          <parameters>
            <parameter name="record" type="com.servoy.j2db.dataprocessing.Record" typecode="com.servoy.j2db.dataprocessing.Record">
              <description><![CDATA[record that is deleted]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onAfterFind">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed after a foundset has switched to find mode.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed after a foundset has switched to find mode.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onAfterInsert">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed after an insert operation.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed after an insert operation.]]></summary>
          </summaries>
          <parameters>
            <parameter name="record" type="com.servoy.j2db.dataprocessing.Record" typecode="com.servoy.j2db.dataprocessing.Record">
              <description><![CDATA[record that is inserted]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onAfterSearch">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed after a search is executed for a foundset.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed after a search is executed for a foundset.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onAfterUpdate">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed after an update operation.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed after an update operation.]]></summary>
          </summaries>
          <parameters>
            <parameter name="record" type="com.servoy.j2db.dataprocessing.Record" typecode="com.servoy.j2db.dataprocessing.Record">
              <description><![CDATA[record that is updated]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onCreate">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed before a record is created. The method can block the creation by returning false.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed before a record is created.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onDelete">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed before a delete operation. The method can block the delete operation by returning false.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed before a delete operation.]]></summary>
          </summaries>
          <parameters>
            <parameter name="record" type="com.servoy.j2db.dataprocessing.Record" typecode="com.servoy.j2db.dataprocessing.Record">
              <description><![CDATA[record that will be deleted]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFind">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed before a foundset is going into find mode. The method can block the mode change.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed before a foundset is going into find mode.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onFoundSetLoad">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed when an in memory or viewfoundset table is first touched (by ui or scripting)]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed when an in memory or viewfoundset table is first touched (by ui or scripting)]]></summary>
          </summaries>
          <parameters>
            <parameter name="memOrViewName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String">
              <description><![CDATA[The in memory or view foundset table name that is touched.]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onInsert">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed before an insert operation. The method can block the insert operation by returning false.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed before an insert operation.]]></summary>
          </summaries>
          <parameters>
            <parameter name="record" type="com.servoy.j2db.dataprocessing.Record" typecode="com.servoy.j2db.dataprocessing.Record">
              <description><![CDATA[record that will be inserted]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onSearch">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed before search() is called on a foundset in find mode. The method can block the search (foundset will stay in find mode).]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed before search() is called on a foundset in find mode.]]></summary>
          </summaries>
          <parameters>
            <parameter name="clearLastResults" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
            <parameter name="reduceSearch" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onUpdate">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[A method that is executed before an update operation. A method can block the update by returning false.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[A method that is executed before an update operation.]]></summary>
          </summaries>
          <parameters>
            <parameter name="record" type="com.servoy.j2db.dataprocessing.Record" typecode="com.servoy.j2db.dataprocessing.Record">
              <description><![CDATA[record that will be updated]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="TextArea" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsTextArea" scriptingName="TextArea">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displayType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field. Can be one of CALENDAR, CHECKS,
COMBOBOX, HTML_AREA, IMAGE_MEDIA, PASSWORD, RADIOS, RTF_AREA, TEXT_AREA,
TEXT_FIELD, TYPE_AHEAD, LIST_BOX, MULTISELECT_LISTBOX or SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="editable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.
The default value of this flag is "true", that is the content can be edited.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.
There are different options for the different dataprovider types that are assigned to this field.
For Integer fields, there is a display and an edit format, using http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html and the max (string) length can be set.
For Text/String fields, there are options to force uppercase,lowercase or only numbers. Or a mask can be set that restrict the input the pattern chars can be found here: http://docs.oracle.com/javase/7/docs/api/javax/swing/text/MaskFormatter.html
A mask can have a placehoder (what is shown when there is no data) and if the data must be stored raw (without literals of the mask). A max text length can also be set to force
the max text length input, this doesn't work on mask because that max length is controlled with the mask.
For Date fields a display and edit format can be set by using a pattern from here: http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html, you can also say this must behave like a mask (the edit format)
A mask only works with when the edit format is exactly that mask (1 char is 1 number/char), because for example MM then only 2 numbers are allowed MMM that displays the month as a string is not supported as a mask.
Some examples are "dd-MM-yyyy", "MM-dd-yyyy", etc.
The format property is also used to set the UI Converter, this means that you can convert the value object to something else before it gets set into the field, this can also result in a type change of the data. 
So a string in scripting/db is converted to a integer in the ui, then you have to set an integer format. 
This property is applicable only for types: TEXT_FIELD, COMBOBOX, TYPE_AHEAD, CALENDAR and SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="placeholderText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed in field when the field doesn't have a text value.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed in field when the field doesn't have a text value.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="scrollbars">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars. Each of the
vertical and horizontal scrollbars can be configured to display all the time,
to display only when needed or to never display.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Scrollbar options for the vertical and horizontal scrollbars.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="selectOnEnter">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus. The default value of this field is "false".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="titleDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="titleDisplaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="valuelist">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data. Can be used
with fields of type CHECKS, COMBOBOX, RADIOS and TYPE_AHEAD.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,mc,wc,sc" name="onAction">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onDataChange">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></summary>
          </summaries>
          <parameters>
            <parameter name="oldValue">
              <description><![CDATA[old value]]></description>
            </parameter>
            <parameter name="newValue">
              <description><![CDATA[new value]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusGained">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.
NOTE: Do not call methods that will influence the focus itself.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusLost">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="TextField" qualifiedName="com.servoy.j2db.documentation.persistence.docs.DocsTextField" scriptingName="TextField">
      <properties>
        <property clientSupport="ng,wc,sc" name="anchors">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized. 

If opposite anchors are activated then the component with grow or 
shrink with the window. For example if Top and Bottom are activated, 
then the component will grow/shrink when the window is vertically 
resized. If Left and Right are activated then the component
will grow/shrink when the window is horizontally resized. 

If opposite anchors are not activated, then the component will 
keep a constant distance from the sides of the window which
correspond to the activated anchors.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Enables a component to stick to a specific side of form and/or to 
grow or shrink when a window is resized.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="background">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The background color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="borderType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The type, color and style of border of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="cssPosition">
          <return type="com.servoy.j2db.persistence.CSSPosition" typecode="com.servoy.j2db.persistence.CSSPosition"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Thecss position of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The dataprovider of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="designTimeProperties">
          <return type="com.servoy.j2db.documentation.scripting.docs.Object" typecode="java.util.Map"><![CDATA[map of the design-time properties]]></return>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Property to get and add design-time properties for a component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displayType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field. Can be one of CALENDAR, CHECKS,
COMBOBOX, HTML_AREA, IMAGE_MEDIA, PASSWORD, RADIOS, RTF_AREA, TEXT_AREA,
TEXT_FIELD, TYPE_AHEAD, LIST_BOX, MULTISELECT_LISTBOX or SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of display used by the field.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="displaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="editable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.
The default value of this flag is "true", that is the content can be edited.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field can be edited or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="enabled">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[enabled state]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The enable state of the component, default true.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="fontType">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The font type of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="foreground">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Color"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The foreground color of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="formIndex">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element. If two elements overlap,
then the element with higher Z index is displayed above the form element with lower Z index.
In case of form inheritance, form index is evaluated in the context (form) where property is defined.
Elements which have child form as context will always be on top of elements which have parent form.
If element is overridden in child form but form index property is still inherited its context is still parent form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Form index returns the z-index of the form element.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="format">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.
There are different options for the different dataprovider types that are assigned to this field.
For Integer fields, there is a display and an edit format, using http://docs.oracle.com/javase/7/docs/api/java/text/DecimalFormat.html and the max (string) length can be set.
For Text/String fields, there are options to force uppercase,lowercase or only numbers. Or a mask can be set that restrict the input the pattern chars can be found here: http://docs.oracle.com/javase/7/docs/api/javax/swing/text/MaskFormatter.html
A mask can have a placehoder (what is shown when there is no data) and if the data must be stored raw (without literals of the mask). A max text length can also be set to force
the max text length input, this doesn't work on mask because that max length is controlled with the mask.
For Date fields a display and edit format can be set by using a pattern from here: http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html, you can also say this must behave like a mask (the edit format)
A mask only works with when the edit format is exactly that mask (1 char is 1 number/char), because for example MM then only 2 numbers are allowed MMM that displays the month as a string is not supported as a mask.
Some examples are "dd-MM-yyyy", "MM-dd-yyyy", etc.
The format property is also used to set the UI Converter, this means that you can convert the value object to something else before it gets set into the field, this can also result in a type change of the data. 
So a string in scripting/db is converted to a integer in the ui, then you have to set an integer format. 
This property is applicable only for types: TEXT_FIELD, COMBOBOX, TYPE_AHEAD, CALENDAR and SPINNER.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The format that should be applied when displaying the data in the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="horizontalAlignment">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component. Can be one of
LEFT, CENTER or RIGHT.

Note that this property does not refer to the horizontal alignment
of the component inside the form.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Horizontal alignment of the text inside the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="location">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Point"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The x and y position of the component, in pixels, separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="margin">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Insets"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The margins of the component. They are specified in this order, 
separated by commas: top, left, bottom, right.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The margins of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component. Through this name it can also accessed in methods.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="placeholderText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed in field when the field doesn't have a text value.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The text that is displayed in field when the field doesn't have a text value.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printSliding">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.
The component can move horizontally or vertically and can grow or shrink in
height and width, based on its content and the content of neighboring
components.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Enables an element to resize based on its content and/or move when printing.]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="printable">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.

By default components are printable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag that tells if the component should be printed or not when the form is printed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="selectOnEnter">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus. The default value of this field is "false".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the content of the field should be automatically selected
when the field receives focus.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="size">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.awt.Dimension"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The width and height (in pixels), separated by a comma.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="styleClass">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.

When defining style classes for specific component types, their names
must be prefixed according to the type of the component. For example 
in order to define a class names 'fancy' for fields, in the style
definition the class must be named 'field.fancy'. If it would be 
intended for labels, then it would be named 'label.fancy'. When specifying
the class name for a component, the prefix is dropped however. Thus the
field or the label will have its styleClass property set to 'fancy' only.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The name of the style class that should be applied to this component.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="tabSeq">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence. The components 
are put into the tab sequence in increasing order of this property. A value of 0 means
to use the default mechanism of building the tab sequence (based on their location on the form).
A value of -2 means to remove the component from the tab sequence.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[An index that specifies the position of the component in the tab sequence.]]></summary>
          </summaries>
        </property>
        <property clientSupport="mc" name="titleDataProvider">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="mc"><![CDATA[Dataprovider for header text to field component]]></summary>
          </summaries>
        </property>
        <property clientSupport="wc,sc" name="titleDisplaysTags">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).
Tags (or placeholders) are words surrounded by %% on each side. There are data tags and
standard tags. Data tags consist in names of dataproviders surrounded by %%. Standard tags
are a set of predefined tags that are made available by the system.

See the "Merging data" section for more details about tags.

The default value of this flag is "false", that is merging of data is disabled by default.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[Flag for header text to field component that enables or disables merging of data inside components using tags (placeholders).]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="titleText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Header text to component]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="toolTipText">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.

NOTE:
HTML should be used for multi-line tooltips; you can also use any
valid HTML tags to format tooltip text. For example:
<html>This includes<b>bolded text</b> and
<font color='blue'>BLUE</font> text as well.</html>]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The text displayed when hovering over the component with a mouse cursor.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="transparent">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.

The default value is "false", that is the components
are not transparent.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[Flag that tells if the component is transparent or not.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,wc,sc" name="valuelist">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data. Can be used
with fields of type CHECKS, COMBOBOX, RADIOS and TYPE_AHEAD.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The valuelist that is used by this field when displaying data.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="visible">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"><![CDATA[visible property]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The visible property of the component, default true.]]></summary>
          </summaries>
        </property>
      </properties>
      <events>
        <event clientSupport="ng,mc,wc,sc" name="onAction">
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The method that is executed when the component is clicked.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,mc,wc,sc" name="onDataChange">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="java.lang.Boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Method that is executed when the data in the component is successfully changed.]]></summary>
          </summaries>
          <parameters>
            <parameter name="oldValue">
              <description><![CDATA[old value]]></description>
            </parameter>
            <parameter name="newValue">
              <description><![CDATA[new value]]></description>
            </parameter>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusGained">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.
NOTE: Do not call methods that will influence the focus itself.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component gains focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="ng,wc,sc" name="onFocusLost">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component looses focus.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
        <event clientSupport="wc,sc" name="onRender">
          <descriptions>
            <description clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="wc,sc"><![CDATA[The method that is executed when the component is rendered.]]></summary>
          </summaries>
        </event>
        <event clientSupport="ng,wc,sc" name="onRightClick">
          <descriptions>
            <description clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,wc,sc"><![CDATA[The method that is executed when the component is right clicked.]]></summary>
          </summaries>
          <parameters>
            <parameter name="event" type="com.servoy.j2db.scripting.JSEvent" typecode="com.servoy.j2db.scripting.JSEvent">
              <description><![CDATA[the event that triggered the action]]></description>
            </parameter>
          </parameters>
        </event>
      </events>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="ValueList" qualifiedName="com.servoy.j2db.persistence.ValueList">
      <properties>
        <property clientSupport="ng,mc,wc,sc" name="addEmptyValue">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Property that tells if an empty value must be shown next to the items in the value list.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Property that tells if an empty value must be shown next to the items in the value list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="customValues">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[A string with the elements in the valuelist. The elements
can be separated by linefeeds (custom1
custom2), optional with realvalues ((custom1|1
custom2|2)).]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[A string with the elements in the valuelist.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProviderID1">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><![CDATA[Returns a String]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[This is the dataprovider selected in the fist list of dataproviders when a table or related valuelist is selected.
This dataprovide can be marked as a display and/or return value]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[This is the dataprovider selected in the fist list of dataproviders when a table or related valuelist is selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProviderID2">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><![CDATA[Returns a String]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[This is the dataprovider selected in the last list of dataproviders when a table or related valuelist is selected.
This dataprovide can be marked as a display and/or return value]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[This is the dataprovider selected in the last list of dataproviders when a table or related valuelist is selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataProviderID3">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><![CDATA[Returns a String]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[This is the dataprovider selected in the last list of dataproviders when a table or related valuelist is selected.
This dataprovide can be marked as a display and/or return value]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[This is the dataprovider selected in the last list of dataproviders when a table or related valuelist is selected.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="dataSource">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Compact representation of the names of the server and table that
are used for loading the data from the database.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Compact representation of the names of the server and table that
are used for loading the data from the database.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="deprecated">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><![CDATA[the deprecate info for this element or null if it is not deprecated]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Gets the deprecate info for this element]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Gets the deprecate info for this element]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="displayValueType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of the display value if this is a global or custom valuelist, servoy needs to know this for formatting purposes]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of the display value if this is a global or custom valuelist, servoy needs to know this for formatting purposes]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="encapsulation">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[the encapsulation mode/level of the persist.]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The encapsulation mode of this Valuelist. The following can be used:

- Public (available in both scripting and designer from any module)
- Module Scope - available in both scripting and designer but only in the same module.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The encapsulation mode of this Valuelist.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="fallbackValueList">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[the valueback valuelist id.]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[If the valuelist only displays the "active" values that a user can choose, but you still need to be able to show also old values, then a fallback valuelist should be set.
 So that there is a backup list for getting a display value for a real value that is not in the normal valuelist anymore.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[If the valuelist only displays the "active" values that a user can choose, but you still need to be able to show also old values, then a fallback valuelist should be set.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="lazyLoading">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[A property special for NGClient and GlobalValuelist to only query the global valuelist when it is needed.
This flag has to be set both on valuelist and in component spec, on the valuelist property.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[A property special for NGClient and GlobalValuelist to only query the global valuelist when it is needed.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the value list.

It is relevant when the "useTableFilter" property is set.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the value list.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="realValueType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of the real value if this is a global or custom valuelist, servoy needs to know this so it can check if the types match on the record it is binded to.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of the real value if this is a global or custom valuelist, servoy needs to know this so it can check if the types match on the record it is binded to.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="relationName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the relation that is used for loading data from the database.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the relation that is used for loading data from the database.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="returnDataProviders">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[Returns a int]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Which of the dataprovers should be used as the return dataprovider, so set back into the records dataprovider.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Which of the dataprovers should be used as the return dataprovider, so set back into the records dataprovider.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="separator">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[A String representing the separator that should be used when multiple
display dataproviders are set, when the value list has the type set to
database values.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[A String representing the separator that should be used when multiple
display dataproviders are set, when the value list has the type set to
database values.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" deprecated="true" name="serverName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the database server that is used for loading the values when
the value list has the type set to database/table values.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the database server that is used for loading the values when
the value list has the type set to database/table values.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="showDataProviders">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"><![CDATA[Returns a int]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Gets the showDataProvider.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Gets the showDataProvider.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="sortOptions">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Sort options that are applied when the valuelist loads its data
from the database.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Sort options that are applied when the valuelist loads its data
from the database.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" deprecated="true" name="tableName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the database table that is used for loading the values when
the value list has the type set to database/table values.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the database table that is used for loading the values when
the value list has the type set to database/table values.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="useTableFilter">
          <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if the name of the valuelist should be applied as a filter on the
'valuelist_name' column when retrieving the data from the database.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Flag that tells if the name of the valuelist should be applied as a filter on the
'valuelist_name' column when retrieving the data from the database.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="valueListType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of the valuelist. Can be either custom values or database values.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of the valuelist.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
    <object clientSupport="ng,mc,wc,sc" publicName="Variable" qualifiedName="com.servoy.j2db.persistence.ScriptVariable">
      <properties>
        <property clientSupport="ng,mc,wc,sc" name="comment">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"><![CDATA[the value of the jsdoc text (comment) of the script variable]]></return>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[Property for setting and getting the jsdoc text (comment) of the script variable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[Property for setting and getting the jsdoc text (comment) of the script variable.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="defaultValue">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The default value of the variable.

It is interpreted as a JS expression.

For form variables ,setting this property requires the form instances to be destroyed (history.remove("formName")).
If you want to use a default value for a newly created variable  create the variable using the 3 parameter version newVariable(name,type,defaultValue).

For INTEGER variables it can be an integer constant, like 10 for example.
For NUMBER variables it can be a real constant, like 22.41. For DATETIME
variables it can be "now", or a JS expression like "new Date()". For TEXT
variables it can be any string surrounded with quotes, like "'some text'".]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The default value of the variable.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="name">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the variable.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the variable.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="scopeName">
          <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The name of the scope.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The name of the scope.]]></summary>
          </summaries>
        </property>
        <property clientSupport="ng,mc,wc,sc" name="variableType">
          <return type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
          <descriptions>
            <description clientSupport="ng,mc,wc,sc"><![CDATA[The type of the variable. Can be one of: TEXT, INTEGER, NUMBER, DATETIME or MEDIA.]]></description>
          </descriptions>
          <summaries>
            <summary clientSupport="ng,mc,wc,sc"><![CDATA[The type of the variable.]]></summary>
          </summaries>
        </property>
      </properties>
    </object>
  </designtime>
  <runtime>
    <object clientSupport="ng,wc,sc" publicName="ALIGNMENT" qualifiedName="com.servoy.j2db.scripting.solutionmodel.ALIGNMENT"/>
    <object clientSupport="ng,wc,sc" publicName="ANCHOR" qualifiedName="com.servoy.j2db.scripting.solutionmodel.ANCHOR"/>
    <object clientSupport="ng,mc,wc,sc" publicName="APPLICATION_TYPES" qualifiedName="com.servoy.j2db.scripting.info.APPLICATION_TYPES"/>
    <object clientSupport="ng,mc,wc,sc" publicName="Application" qualifiedName="com.servoy.j2db.scripting.JSApplication" scriptingName="application"/>
    <object clientSupport="ng,wc,sc" publicName="BEVELTYPE" qualifiedName="com.servoy.j2db.scripting.solutionmodel.BEVELTYPE"/>
    <object clientSupport="wc,sc" publicName="CLIENTDESIGN" qualifiedName="com.servoy.j2db.scripting.info.CLIENTDESIGN"/>
    <object clientSupport="ng,wc,sc" deprecated="true" publicName="COLUMNTYPE" qualifiedName="com.servoy.j2db.scripting.info.COLUMNTYPE"/>
    <object clientSupport="ng,wc,sc" publicName="CURSOR" qualifiedName="com.servoy.j2db.scripting.solutionmodel.CURSOR"/>
    <object clientSupport="ng,wc,sc" publicName="DBDataSource" qualifiedName="com.servoy.j2db.dataprocessing.datasource.DBDataSource"/>
    <object clientSupport="ng,wc,sc" publicName="DBDataSourceServer" qualifiedName="com.servoy.j2db.dataprocessing.datasource.DBDataSourceServer"/>
    <object clientSupport="ng,wc,sc" publicName="DEFAULTS" qualifiedName="com.servoy.j2db.scripting.solutionmodel.DEFAULTS"/>
    <object clientSupport="ng,wc,sc" deprecated="true" publicName="DISPLAYTYPE" qualifiedName="com.servoy.j2db.scripting.solutionmodel.DISPLAYTYPE"/>
    <object clientSupport="wc,sc" publicName="DRAGNDROP" qualifiedName="com.servoy.j2db.dnd.DRAGNDROP"/>
    <object clientSupport="ng,wc,sc" publicName="DataException" qualifiedName="com.servoy.j2db.dataprocessing.DataException"/>
    <object clientSupport="ng,mc,wc,sc" publicName="Database Manager" qualifiedName="com.servoy.j2db.dataprocessing.JSDatabaseManager" scriptingName="databaseManager"/>
    <object clientSupport="ng,wc,sc" publicName="Datasources" qualifiedName="com.servoy.j2db.dataprocessing.datasource.JSDataSources" scriptingName="datasources"/>
    <object clientSupport="ng,wc,sc" publicName="ELEMENT_TYPES" qualifiedName="com.servoy.j2db.scripting.info.ELEMENT_TYPES"/>
    <object clientSupport="ng,wc,sc" publicName="FONTSTYLE" qualifiedName="com.servoy.j2db.scripting.solutionmodel.FONTSTYLE"/>
    <object clientSupport="ng,wc,sc" deprecated="true" publicName="FORMSECURITY" qualifiedName="com.servoy.j2db.scripting.info.FORMSECURITY"/>
    <object clientSupport="ng,wc,sc" deprecated="true" publicName="JOINTYPE" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JOINTYPE"/>
    <object clientSupport="mc,wc,sc" extendsComponent="com.servoy.j2db.scripting.solutionmodel.JSComponent" publicName="JSBean" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSBean"/>
    <object clientSupport="ng,mc,wc,sc" extendsComponent="com.servoy.j2db.scripting.solutionmodel.JSComponent" publicName="JSButton" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSButton" scriptingName="JSButton"/>
    <object clientSupport="ng" publicName="JSCSSPosition" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSCSSPosition" scriptingName="CSSPosition"/>
    <object clientSupport="ng,wc,sc" publicName="JSCalculation" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSCalculation"/>
    <object clientSupport="mc" publicName="JSCalendar" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSCalendar"/>
    <object clientSupport="mc" publicName="JSChecks" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSChecks"/>
    <object clientSupport="ng,wc,sc" publicName="JSColumn" qualifiedName="com.servoy.j2db.dataprocessing.JSColumn"/>
    <object clientSupport="ng,wc,sc" publicName="JSColumnObject" qualifiedName="com.servoy.j2db.dataprocessing.JSColumnObject"/>
    <object clientSupport="mc" publicName="JSCombobox" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSCombobox"/>
    <object clientSupport="ng,wc,sc" publicName="JSComponent" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSComponent" scriptingName="JSComponent"/>
    <object clientSupport="wc,sc" publicName="JSDNDEvent" qualifiedName="com.servoy.j2db.dnd.JSDNDEvent" scriptingName="JSDNDEvent"/>
    <object clientSupport="ng,wc,sc" publicName="JSDataSet" qualifiedName="com.servoy.j2db.dataprocessing.JSDataSet" scriptingName="JSDataSet"/>
    <object clientSupport="ng,wc,sc" publicName="JSDataSource" qualifiedName="com.servoy.j2db.dataprocessing.datasource.JSDataSource"/>
    <object clientSupport="ng,wc,sc" publicName="JSDataSourceNode" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSDataSourceNode"/>
    <object clientSupport="ng,mc,wc,sc" publicName="JSEvent" qualifiedName="com.servoy.j2db.scripting.JSEvent" scriptingName="JSEvent"/>
    <object clientSupport="mc" extendsComponent="com.servoy.j2db.scripting.solutionmodel.JSComponent" publicName="JSField" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSFieldWithConstants" scriptingName="JSField"/>
    <object clientSupport="mc" publicName="JSFooter" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSFooter"/>
    <object clientSupport="mc" publicName="JSForm" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSForm" scriptingName="JSForm"/>
    <object clientSupport="ng,mc,wc,sc" publicName="JSFoundSet" qualifiedName="com.servoy.j2db.dataprocessing.FoundSet" scriptingName="JSFoundSet"/>
    <object clientSupport="ng,wc,sc" publicName="JSFoundSetUpdater" qualifiedName="com.servoy.j2db.dataprocessing.JSFoundSetUpdater"/>
    <object clientSupport="mc" publicName="JSHeader" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSHeader"/>
    <object clientSupport="mc" publicName="JSInsetList" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSInsetList"/>
    <object clientSupport="mc" extendsComponent="com.servoy.j2db.scripting.solutionmodel.JSComponent" publicName="JSLabel" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSLabel" scriptingName="JSLabel"/>
    <object clientSupport="ng,wc,sc" publicName="JSLayoutContainer" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSLayoutContainer" scriptingName="JSLayoutContainer"/>
    <object clientSupport="mc" publicName="JSList" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSList"/>
    <object clientSupport="ng,wc,sc" publicName="JSMedia" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSMedia"/>
    <object clientSupport="ng,wc,sc" publicName="JSMethod" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSMethod" scriptingName="JSMethod"/>
    <object clientSupport="ng,wc,sc" extendsComponent="com.servoy.j2db.scripting.solutionmodel.JSBase" publicName="JSPart" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSPartWithConstants" scriptingName="JSPart"/>
    <object clientSupport="mc" publicName="JSPassword" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSPassword"/>
    <object clientSupport="wc,sc" extendsComponent="com.servoy.j2db.scripting.solutionmodel.JSComponent" publicName="JSPortal" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSPortal"/>
    <object clientSupport="mc" publicName="JSRadios" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSRadios"/>
    <object clientSupport="ng,mc,wc,sc" publicName="JSRecord" qualifiedName="com.servoy.j2db.dataprocessing.Record" scriptingName="JSRecord"/>
    <object clientSupport="ng,wc,sc" publicName="JSRelation" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSRelation"/>
    <object clientSupport="ng,wc,sc" publicName="JSRelationItem" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSRelationItem"/>
    <object clientSupport="ng,wc,sc" publicName="JSRenderEvent" qualifiedName="com.servoy.j2db.scripting.JSRenderEvent" scriptingName="JSRenderEvent"/>
    <object clientSupport="ng,wc,sc" publicName="JSServer" qualifiedName="com.servoy.j2db.dataprocessing.JSServer"/>
    <object clientSupport="ng,wc,sc" publicName="JSStyle" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSStyle"/>
    <object clientSupport="ng,wc,sc" publicName="JSTab" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSTab"/>
    <object clientSupport="ng,wc,sc" extendsComponent="com.servoy.j2db.scripting.solutionmodel.JSComponent" publicName="JSTabPanel" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSTabPanel"/>
    <object clientSupport="ng,wc,sc" publicName="JSTable" qualifiedName="com.servoy.j2db.dataprocessing.JSTable"/>
    <object clientSupport="ng,wc,sc" publicName="JSTableObject" qualifiedName="com.servoy.j2db.dataprocessing.JSTableObject" scriptingName="JSTableObject"/>
    <object clientSupport="mc" publicName="JSText" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSText"/>
    <object clientSupport="mc" publicName="JSTextArea" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSTextArea"/>
    <object clientSupport="ng,wc,sc" publicName="JSTitle" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSTitle"/>
    <object clientSupport="ng,mc,wc,sc" publicName="JSUnit" qualifiedName="com.servoy.j2db.scripting.JSUnitAssertFunctions" scriptingName="jsunit"/>
    <object clientSupport="ng,wc,sc" publicName="JSUpload" qualifiedName="com.servoy.j2db.scripting.JSUpload" scriptingName="JSUpload"/>
    <object clientSupport="ng,wc,sc" publicName="JSValueList" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSValueList"/>
    <object clientSupport="ng,wc,sc" publicName="JSVariable" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSVariable"/>
    <object clientSupport="ng" extendsComponent="com.servoy.j2db.scripting.solutionmodel.JSComponent" publicName="JSWebComponent" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSWebComponent"/>
    <object clientSupport="ng,wc,sc" publicName="JSWindow" qualifiedName="com.servoy.j2db.scripting.JSWindow" scriptingName="JSWindow"/>
    <object clientSupport="ng,wc,sc" publicName="LOGGINGLEVEL" qualifiedName="com.servoy.j2db.scripting.info.LOGGINGLEVEL"/>
    <object clientSupport="ng,wc,sc" publicName="MEDIAOPTION" qualifiedName="com.servoy.j2db.scripting.solutionmodel.MEDIAOPTION"/>
    <object clientSupport="ng,wc,sc" publicName="MemDataSource" qualifiedName="com.servoy.j2db.dataprocessing.datasource.MemDataSource"/>
    <object clientSupport="ng" publicName="NGCONSTANTS" qualifiedName="com.servoy.j2db.scripting.info.NGCONSTANTS"/>
    <object clientSupport="ng,wc,sc" publicName="PAGEORIENTATION" qualifiedName="com.servoy.j2db.scripting.solutionmodel.PAGEORIENTATION"/>
    <object clientSupport="ng,wc,sc" deprecated="true" publicName="PARTS" qualifiedName="com.servoy.j2db.scripting.solutionmodel.PARTS"/>
    <object clientSupport="ng,wc,sc" publicName="PRINTSLIDING" qualifiedName="com.servoy.j2db.scripting.solutionmodel.PRINTSLIDING"/>
    <object clientSupport="ng,wc,sc" publicName="SCROLLBAR" qualifiedName="com.servoy.j2db.scripting.solutionmodel.SCROLLBAR"/>
    <object clientSupport="ng,wc,sc" publicName="SPDataSource" qualifiedName="com.servoy.j2db.dataprocessing.datasource.SPDataSource"/>
    <object clientSupport="ng,wc,sc" publicName="SPDataSourceServer" qualifiedName="com.servoy.j2db.dataprocessing.datasource.SPDataSourceServer"/>
    <object clientSupport="ng,wc,sc" publicName="SQL_ACTION_TYPES" qualifiedName="com.servoy.j2db.scripting.info.SQL_ACTION_TYPES"/>
    <object clientSupport="ng,mc,wc,sc" publicName="Security" qualifiedName="com.servoy.j2db.scripting.JSSecurity" scriptingName="security"/>
    <object clientSupport="mc" publicName="SolutionModel" qualifiedName="com.servoy.j2db.scripting.solutionmodel.JSSolutionModel" scriptingName="solutionModel"/>
    <object clientSupport="ng,wc,sc" deprecated="true" publicName="TABLESECURITY" qualifiedName="com.servoy.j2db.scripting.info.TABLESECURITY"/>
    <object clientSupport="ng,wc,sc" publicName="TITLEJUSTIFICATION" qualifiedName="com.servoy.j2db.scripting.solutionmodel.TITLEJUSTIFICATION"/>
    <object clientSupport="ng,wc,sc" publicName="TITLEPOSITION" qualifiedName="com.servoy.j2db.scripting.solutionmodel.TITLEPOSITION"/>
    <object clientSupport="ng,wc,sc" publicName="UICONSTANTS" qualifiedName="com.servoy.j2db.scripting.info.UICONSTANTS"/>
    <object clientSupport="ng,wc,sc" publicName="UNITS" qualifiedName="com.servoy.j2db.scripting.solutionmodel.UNITS"/>
    <object clientSupport="ng,mc,wc,sc" publicName="Utils" qualifiedName="com.servoy.j2db.scripting.JSUtils" scriptingName="utils"/>
    <object clientSupport="ng,wc,sc" deprecated="true" publicName="VALUELIST" qualifiedName="com.servoy.j2db.scripting.solutionmodel.VALUELIST"/>
    <object clientSupport="ng,wc,sc" deprecated="true" publicName="VARIABLETYPE" qualifiedName="com.servoy.j2db.scripting.solutionmodel.VARIABLETYPE"/>
    <object clientSupport="ng,wc,sc" deprecated="true" publicName="VIEW" qualifiedName="com.servoy.j2db.scripting.solutionmodel.VIEW"/>
    <object clientSupport="ng,wc,sc" publicName="ViewDataSource" qualifiedName="com.servoy.j2db.dataprocessing.datasource.ViewDataSource"/>
    <object clientSupport="ng,wc,sc" publicName="ViewFoundSet" qualifiedName="com.servoy.j2db.dataprocessing.ViewFoundSet" scriptingName="ViewFoundSet"/>
    <object clientSupport="ng,wc,sc" publicName="ViewRecord" qualifiedName="com.servoy.j2db.dataprocessing.ViewRecord" scriptingName="ViewRecord"/>
    <object clientSupport="wc" publicName="WEBCONSTANTS" qualifiedName="com.servoy.j2db.scripting.info.WEBCONSTANTS"/>
    <object clientSupport="ng,mc,wc,sc" publicName="i18n" qualifiedName="com.servoy.j2db.scripting.JSI18N" scriptingName="i18n"/>
    <object clientSupport="ng,mc,wc,sc" publicName="servoyDeveloper" qualifiedName="com.servoy.j2db.scripting.solutionmodel.IJSDeveloperSolutionModel" scriptingName="servoyDeveloper"/>
  </runtime>
</servoydoc>
